{"version":3,"file":"canvas-datagrid.module.js","sources":["../lib/defaults.js","../lib/component.js","../lib/draw.js","../node_modules/is-printable-key-event/dist/index.js","../lib/events.js","../lib/touch.js","../lib/intf.js","../lib/contextMenu.js","../lib/dom.js","../lib/publicMethods.js","../lib/main.js"],"sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n\r\n'use strict';\r\nexport default function (self) {\r\n  self.defaults = {\r\n    attributes: [\r\n      ['allowColumnReordering', true],\r\n      ['allowColumnResize', true],\r\n      ['allowColumnResizeFromCell', false],\r\n      ['allowFreezingRows', false],\r\n      ['allowFreezingColumns', false],\r\n      ['allowMovingSelection', true],\r\n      ['allowRowHeaderResize', true],\r\n      ['allowRowReordering', false],\r\n      ['allowRowResize', true],\r\n      ['allowRowResizeFromCell', false],\r\n      ['allowSorting', true],\r\n      ['autoGenerateSchema', false],\r\n      ['autoResizeColumns', false],\r\n      ['autoResizeRows', false],\r\n      ['blanksText', '(Blanks)'],\r\n      ['borderDragBehavior', 'none'],\r\n      ['borderResizeZone', 10],\r\n      ['clearSettingsOptionText', 'Clear saved settings'],\r\n      ['columnHeaderClickBehavior', 'sort'],\r\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\r\n      ['columnSelectorText', 'Add/Remove columns'],\r\n      ['columnSelectorVisibleText', '\\u2713'],\r\n      ['contextHoverScrollAmount', 2],\r\n      ['contextHoverScrollRateMs', 5],\r\n      ['copyHeadersOnSelectAll', true],\r\n      ['copyText', 'Copy'],\r\n      ['debug', false],\r\n      ['editable', true],\r\n      ['ellipsisText', '...'],\r\n      ['filterOptionText', 'Filter %s'],\r\n      ['filterTextPrefix', '(filtered) '],\r\n      ['globalRowResize', false],\r\n      ['hideColumnText', 'Hide %s'],\r\n      ['hoverMode', 'cell'],\r\n      ['maxAutoCompleteItems', 200],\r\n      ['multiLine', false],\r\n      ['name', ''],\r\n      ['pageUpDownOverlap', 1],\r\n      ['pasteText', 'Paste'],\r\n      ['persistantSelectionMode', false],\r\n      ['removeFilterOptionText', 'Remove filter on %s'],\r\n      ['reorderDeadZone', 3],\r\n      ['resizeScrollZone', 20],\r\n      ['rowGrabZoneSize', 5],\r\n      ['saveAppearance', true],\r\n      ['scrollAnimationPPSThreshold', 0.75],\r\n      ['scrollPointerLock', false],\r\n      ['scrollRepeatRate', 75],\r\n      ['selectionFollowsActiveCell', false],\r\n      ['selectionHandleBehavior', 'none'],\r\n      ['selectionMode', 'cell'],\r\n      ['selectionScrollIncrement', 20],\r\n      ['selectionScrollZone', 20],\r\n      ['showClearSettingsOption', true],\r\n      ['showColumnHeaders', true],\r\n      ['showColumnSelector', true],\r\n      ['showCopy', false],\r\n      ['showFilter', true],\r\n      ['showNewRow', false],\r\n      ['showOrderByOption', true],\r\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\r\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\r\n      ['showPaste', false],\r\n      ['showPerformance', false],\r\n      ['showRowHeaders', true],\r\n      ['showRowNumbers', true],\r\n      ['showRowNumberGaps', true],\r\n      ['singleSelectionMode', false],\r\n      ['snapToRow', false],\r\n      ['touchContextMenuTimeMs', 800],\r\n      ['touchDeadZone', 3],\r\n      ['touchEasingMethod', 'easeOutQuad'],\r\n      ['touchReleaseAcceleration', 1000],\r\n      ['touchReleaseAnimationDurationMs', 2000],\r\n      ['touchScrollZone', 20],\r\n      ['touchSelectHandleZone', 20],\r\n      ['touchZoomSensitivity', 0.005],\r\n      ['touchZoomMin', 0.5],\r\n      ['touchZoomMax', 1.75],\r\n      ['maxPixelRatio', 2],\r\n      ['tree', false],\r\n      ['treeHorizontalScroll', false],\r\n    ],\r\n    styles: [\r\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['activeCellBorderWidth', 1],\r\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellFont', '16px sans-serif'],\r\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['activeCellHorizontalAlignment', 'left'],\r\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['activeCellOverlayBorderWidth', 1],\r\n      ['activeCellPaddingBottom', 5],\r\n      ['activeCellPaddingLeft', 5],\r\n      ['activeCellPaddingRight', 5],\r\n      ['activeCellPaddingTop', 5],\r\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\r\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellVerticalAlignment', 'center'],\r\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\r\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\r\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['autocompleteBottomMargin', 60],\r\n      ['autosizeHeaderCellPadding', 8],\r\n      ['autosizePadding', 5],\r\n      ['cellAutoResizePadding', 13],\r\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['cellBorderWidth', 1],\r\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellFont', '16px sans-serif'],\r\n      ['cellGridHeight', 250],\r\n      ['cellHeight', 24],\r\n      ['cellHeightWithChildGrid', 150],\r\n      ['cellHorizontalAlignment', 'left'],\r\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellPaddingBottom', 5],\r\n      ['cellPaddingLeft', 5],\r\n      ['cellPaddingRight', 5],\r\n      ['cellPaddingTop', 5],\r\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\r\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellVerticalAlignment', 'center'],\r\n      ['cellWidth', 250],\r\n      ['cellWidthWithChildGrid', 250],\r\n      ['cellWhiteSpace', 'nowrap'],\r\n      ['cellLineHeight', 1],\r\n      ['cellLineSpacing', 3],\r\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\r\n      ['childContextMenuArrowHTML', '&#x25BA;'],\r\n      ['childContextMenuMarginLeft', -11],\r\n      ['childContextMenuMarginTop', -6],\r\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['columnHeaderCellBorderWidth', 1],\r\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['columnHeaderCellCapBorderWidth', 1],\r\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\r\n      ['columnHeaderCellFont', '16px sans-serif'],\r\n      ['columnHeaderCellHeight', 25],\r\n      ['columnHeaderCellHorizontalAlignment', 'left'],\r\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\r\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['columnHeaderCellPaddingBottom', 5],\r\n      ['columnHeaderCellPaddingLeft', 5],\r\n      ['columnHeaderCellPaddingRight', 5],\r\n      ['columnHeaderCellPaddingTop', 5],\r\n      ['columnHeaderCellVerticalAlignment', 'center'],\r\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['columnHeaderOrderByArrowBorderWidth', 1],\r\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\r\n      ['columnHeaderOrderByArrowHeight', 8],\r\n      ['columnHeaderOrderByArrowMarginLeft', 0],\r\n      ['columnHeaderOrderByArrowMarginRight', 5],\r\n      ['columnHeaderOrderByArrowMarginTop', 6],\r\n      ['columnHeaderOrderByArrowWidth', 13],\r\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextFilterButtonBorderRadius', '3px'],\r\n      ['contextFilterButtonHTML', '&#x25BC;'],\r\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\r\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextFilterInputBorderRadius', '0'],\r\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\r\n      ['contextFilterInputFontFamily', 'sans-serif'],\r\n      ['contextFilterInputFontSize', '14px'],\r\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\r\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\r\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\r\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\r\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\r\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\r\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextMenuBorderRadius', '3px'],\r\n      ['contextMenuChildArrowFontSize', '12px'],\r\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\r\n      ['contextMenuCursor', 'default'],\r\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\r\n      ['contextMenuFilterButtonFontSize', '10px'],\r\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\r\n      ['contextMenuFontFamily', 'sans-serif'],\r\n      ['contextMenuFontSize', '16px'],\r\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\r\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\r\n      ['contextMenuItemBorderRadius', '3px'],\r\n      ['contextMenuItemMargin', '2px'],\r\n      ['contextMenuLabelDisplay', 'inline-block'],\r\n      ['contextMenuLabelMargin', '0 3px 0 0'],\r\n      ['contextMenuLabelMaxWidth', '700px'],\r\n      ['contextMenuLabelMinWidth', '75px'],\r\n      ['contextMenuMarginLeft', 3],\r\n      ['contextMenuMarginTop', -3],\r\n      ['contextMenuOpacity', '0.98'],\r\n      ['contextMenuPadding', '2px'],\r\n      ['contextMenuWindowMargin', 30],\r\n      ['contextMenuZIndex', 10000],\r\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\r\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\r\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\r\n      ['debugFont', '11px sans-serif'],\r\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\r\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\r\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\r\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\r\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\r\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\r\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\r\n      ['display', 'inline-block'],\r\n      ['editCellBackgroundColor', 'white'],\r\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\r\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\r\n      ['editCellColor', 'black'],\r\n      ['editCellFontFamily', 'sans-serif'],\r\n      ['editCellFontSize', '16px'],\r\n      ['editCellPaddingLeft', 4],\r\n      ['editCellZIndex', 10000],\r\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\r\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\r\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\r\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\r\n      ['frozenMarkerBorderWidth', 1],\r\n      ['frozenMarkerWidth', 2],\r\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['gridBorderCollapse', 'collapse'],\r\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['gridBorderWidth', 1],\r\n      ['height', 'auto'],\r\n      ['maxHeight', 'inherit'],\r\n      ['maxWidth', 'inherit'],\r\n      ['minColumnWidth', 45],\r\n      ['minHeight', 'inherit'],\r\n      ['minRowHeight', 24],\r\n      ['minWidth', 'inherit'],\r\n      ['mobileContextMenuMargin', 10],\r\n      ['mobileEditInputHeight', 30],\r\n      ['mobileEditFontFamily', 'sans-serif'],\r\n      ['mobileEditFontSize', '16px'],\r\n      ['moveOverlayBorderWidth', 1],\r\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['moveOverlayBorderSegments', '12, 7'],\r\n      ['name', 'default'],\r\n      ['overflowY', 'auto'],\r\n      ['overflowX', 'auto'],\r\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\r\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\r\n      ['reorderMarkerBorderWidth', 1.25],\r\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['reorderMarkerIndexBorderWidth', 2.75],\r\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\r\n      ['rowHeaderCellBorderWidth', 1],\r\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellFont', '16px sans-serif'],\r\n      ['rowHeaderCellHeight', 25],\r\n      ['rowHeaderCellHorizontalAlignment', 'left'],\r\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\r\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['rowHeaderCellPaddingBottom', 5],\r\n      ['rowHeaderCellPaddingLeft', 5],\r\n      ['rowHeaderCellPaddingRight', 5],\r\n      ['rowHeaderCellPaddingTop', 5],\r\n      ['rowHeaderCellRowNumberGapHeight', 5],\r\n      ['rowHeaderCellRowNumberGapColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\r\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellVerticalAlignment', 'center'],\r\n      ['rowHeaderCellWidth', 57],\r\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\r\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['scrollBarBorderWidth', 0.5],\r\n      ['scrollBarBoxBorderRadius', 4.125],\r\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\r\n      ['scrollBarBoxMargin', 2],\r\n      ['scrollBarBoxMinSize', 15],\r\n      ['scrollBarBoxWidth', 8],\r\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['scrollBarWidth', 11],\r\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\r\n      ['selectionHandleBorderWidth', 1.5],\r\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\r\n      ['selectionHandleSize', 8],\r\n      ['selectionHandleType', 'square'],\r\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['selectionOverlayBorderWidth', 1],\r\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['treeArrowBorderWidth', 1],\r\n      ['treeArrowClickRadius', 5],\r\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\r\n      ['treeArrowHeight', 8],\r\n      ['treeArrowMarginLeft', 0],\r\n      ['treeArrowMarginRight', 5],\r\n      ['treeArrowMarginTop', 6],\r\n      ['treeArrowWidth', 13],\r\n      ['treeGridHeight', 250],\r\n      ['width', 'auto'],\r\n    ],\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport defaults from './defaults';\r\n\r\nexport default function () {\r\n  var typeMap,\r\n    component = {};\r\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\r\n    prop = prop.replace('--cdg-', '');\r\n    var p = '',\r\n      nextLetterCap;\r\n    Array.prototype.forEach.call(prop, function (char) {\r\n      if (nextLetterCap) {\r\n        nextLetterCap = false;\r\n        p += char.toUpperCase();\r\n        return;\r\n      }\r\n      if (char === '-') {\r\n        nextLetterCap = true;\r\n        return;\r\n      }\r\n      p += char;\r\n    });\r\n    return p;\r\n  };\r\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\r\n    var p = '';\r\n    Array.prototype.forEach.call(prop, function (char) {\r\n      if (char === char.toUpperCase()) {\r\n        p += '-' + char.toLowerCase();\r\n        return;\r\n      }\r\n      p += char;\r\n    });\r\n    return (cust ? '--cdg-' : '') + p;\r\n  };\r\n  function getDefaultItem(base, item) {\r\n    var i = {},\r\n      r;\r\n    defaults(i);\r\n    r = i.defaults[base].filter(function (i) {\r\n      return (\r\n        i[0].toLowerCase() === item.toLowerCase() ||\r\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\r\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\r\n      );\r\n    })[0];\r\n    return r;\r\n  }\r\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\r\n    if (!intf.isComponent) {\r\n      return;\r\n    }\r\n    var cStyle = window.getComputedStyle(\r\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\r\n        null,\r\n      ),\r\n      defs = {};\r\n    intf.computedStyle = cStyle;\r\n    defaults(defs);\r\n    defs = defs.defaults.styles;\r\n    defs.forEach(function (def) {\r\n      var val;\r\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\r\n      if (val === '') {\r\n        val = cStyle.getPropertyValue(\r\n          component.hyphenateProperty(def[0], false),\r\n        );\r\n      }\r\n      if (val !== '' && typeof val === 'string') {\r\n        intf.setStyleProperty(\r\n          def[0],\r\n          typeMap[typeof def[1]](\r\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\r\n            def[1],\r\n          ),\r\n          true,\r\n        );\r\n      }\r\n    });\r\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\r\n      requestAnimationFrame(function () {\r\n        intf.resize(true);\r\n      });\r\n      intf.dispatchEvent('stylechanged', intf.style);\r\n    }\r\n  };\r\n  typeMap = {\r\n    data: function (strData) {\r\n      try {\r\n        return JSON.parse(strData);\r\n      } catch (e) {\r\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\r\n      }\r\n    },\r\n    schema: function (strSchema) {\r\n      try {\r\n        return JSON.parse(strSchema);\r\n      } catch (e) {\r\n        throw new Error(\r\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\r\n        );\r\n      }\r\n    },\r\n    number: function (strNum, def) {\r\n      var n = parseInt(strNum, 10);\r\n      return isNaN(n) ? def : n;\r\n    },\r\n    boolean: function (strBool) {\r\n      return /true/i.test(strBool);\r\n    },\r\n    string: function (str) {\r\n      return str;\r\n    },\r\n  };\r\n  component.getObservableAttributes = function () {\r\n    var i = {},\r\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\r\n    defaults(i);\r\n    i.defaults.attributes.forEach(function (attr) {\r\n      attrs.push(attr[0].toLowerCase());\r\n    });\r\n    return attrs;\r\n  };\r\n  component.disconnectedCallback = function () {\r\n    this.connected = false;\r\n  };\r\n  component.connectedCallback = function () {\r\n    var intf = this;\r\n    intf.parentDOMNode.innerHTML = '';\r\n    intf.parentDOMNode.appendChild(intf.canvas);\r\n    intf.connected = true;\r\n    component.observe(intf);\r\n    component.applyComponentStyle(true, intf);\r\n    intf.resize(true);\r\n  };\r\n  component.adoptedCallback = function () {\r\n    this.resize();\r\n  };\r\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\r\n    var tfn,\r\n      intf = this,\r\n      def;\r\n    if (attrName === 'style') {\r\n      component.applyComponentStyle(false, intf);\r\n      return;\r\n    }\r\n    if (attrName === 'data') {\r\n      if (intf.dataType === 'application/x-canvas-datagrid') {\r\n        intf.dataType = 'application/json+x-canvas-datagrid';\r\n      }\r\n      intf.data = newVal;\r\n      return;\r\n    }\r\n    if (attrName === 'schema') {\r\n      intf.schema = typeMap.schema(newVal);\r\n      return;\r\n    }\r\n    if (attrName === 'name') {\r\n      intf.name = newVal;\r\n      return;\r\n    }\r\n    if (attrName === 'class' || attrName === 'className') {\r\n      return;\r\n    }\r\n    def = getDefaultItem('attributes', attrName);\r\n    if (def) {\r\n      tfn = typeMap[typeof def[1]];\r\n      intf.attributes[def[0]] = tfn(newVal);\r\n      return;\r\n    }\r\n    if (/^on/.test(attrName)) {\r\n      intf.addEventListener('on' + attrName, Function('e', newVal));\r\n    }\r\n    return;\r\n  };\r\n  component.observe = function (intf) {\r\n    var observer;\r\n    if (!window.MutationObserver) {\r\n      return;\r\n    }\r\n    intf.applyComponentStyle = function () {\r\n      component.applyComponentStyle(false, intf);\r\n      intf.resize();\r\n    };\r\n    /**\r\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\r\n     * @memberof canvasDatagrid\r\n     * @name applyComponentStyle\r\n     * @method\r\n     */\r\n    observer = new window.MutationObserver(function (mutations) {\r\n      var checkInnerHTML, checkStyle;\r\n      Array.prototype.forEach.call(mutations, function (mutation) {\r\n        if (\r\n          mutation.attributeName === 'class' ||\r\n          mutation.attributeName === 'style'\r\n        ) {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (mutation.target.nodeName === 'STYLE') {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (\r\n          mutation.target.parentNode &&\r\n          mutation.target.parentNode.nodeName === 'STYLE'\r\n        ) {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (\r\n          mutation.target === intf &&\r\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\r\n        ) {\r\n          checkInnerHTML = true;\r\n        }\r\n      });\r\n      if (checkStyle) {\r\n        intf.applyComponentStyle(false, intf);\r\n      }\r\n      if (checkInnerHTML) {\r\n        if (intf.dataType === 'application/x-canvas-datagrid') {\r\n          intf.dataType = 'application/json+x-canvas-datagrid';\r\n        }\r\n        intf.data = intf.innerHTML;\r\n      }\r\n    });\r\n    observer.observe(intf, {\r\n      characterData: true,\r\n      childList: true,\r\n      attributes: true,\r\n      subtree: true,\r\n    });\r\n    Array.prototype.forEach.call(\r\n      document.querySelectorAll('style'),\r\n      function (el) {\r\n        observer.observe(el, {\r\n          characterData: true,\r\n          childList: true,\r\n          attributes: true,\r\n          subtree: true,\r\n        });\r\n      },\r\n    );\r\n  };\r\n  return component;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var curSplitChar = word[word.length - 1] === '-' ? '' : splitChar;\n      var measure = self.ctx.measureText(word + curSplitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + curSplitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        var arr = word.split('-');\n        arr = arr.map((item, index) => {\n          return index === arr.length - 1 ? item : item + '-';\n        });\n        words.splice(x, 1, ...arr);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + curSplitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColumnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      schema,\n      rowIndex,\n      rowData,\n      aCell,\n      viewData = self.viewData || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = viewData.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (viewData.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === schema.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            (self.attributes.hoverMode === 'row' ||\n              self.hovers.columnIndex === columnOrderIndex),\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = rowData ? rowData[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: rowData,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: rowData,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n\n          viewRowIndex: rowOrderIndex,\n          viewColumnIndex: columnOrderIndex,\n\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\n          boundColumnIndex: columnOrderIndex,\n\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n\n        // Gaps may occur in row numbers between consecutively rendered rows\n        // when we are filtering. We draw attention to this by drawing a thick\n        // border overlapping the two consecutive row headers.\n        if (\n          isRowHeader &&\n          self.attributes.showRowNumbers &&\n          self.attributes.showRowNumberGaps\n        ) {\n          const previousRowNumber = self.getBoundRowIndexFromViewRowIndex(\n            rowOrderIndex - 1,\n          );\n          const hasRowGap =\n            previousRowNumber !== undefined &&\n            cell.boundRowIndex > 0 &&\n            cell.boundRowIndex - previousRowNumber > 1;\n\n          if (hasRowGap) {\n            const barHeight = self.style.rowHeaderCellRowNumberGapHeight;\n            const barColor = self.style.rowHeaderCellRowNumberGapColor;\n\n            self.ctx.save();\n\n            self.ctx.fillStyle = barColor;\n\n            fillRect(cell.x, cell.y - barHeight / 2, cell.width, barHeight);\n\n            self.ctx.restore();\n          }\n        }\n\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n\n        // When filtering we'd like to display the actual row numbers,\n        // as it is in the unfiltered data, instead of simply the viewed\n        // row index + 1. If rowIndex > viewData.length, it's a new row\n        // added to the end, and we want to render that new row's number\n        const filteredRowNumber =\n          self.viewData && rowIndex < self.viewData.length\n            ? self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1\n            : self.originalData\n            ? self.originalData.length + 1\n            : rowOrderIndex + 1;\n\n        const rowHeaderValue = self.hasActiveFilters()\n          ? filteredRowNumber\n          : rowIndex + 1;\n\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\n        const headerDescription = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: rowHeaderValue,\n          index: -1,\n        };\n        rowOpen = self.openChildren[rowIndex];\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\n          headerDescription,\n          -1,\n          -1,\n        );\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = schema.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = schema[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: schema.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(rowOrderIndex, rowIndex) {\n      var headerIndex,\n        treeHeight,\n        rowSansTreeHeight,\n        columnOrderIndex,\n        g = schema.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rowData = viewData[rowOrderIndex];\n      rowOpen = self.openChildren[rowOrderIndex];\n      rowSansTreeHeight =\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (\n        columnOrderIndex = self.scrollIndexLeft;\n        columnOrderIndex < g;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          self.scrollIndexRight = columnOrderIndex;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (\n        columnOrderIndex = 0;\n        columnOrderIndex < self.frozenColumn;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[rowOrderIndex];\n      if (rowOrderIndex !== viewData.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: rowOrderIndex,\n        };\n        self.visibleCells.unshift({\n          rowIndex: rowOrderIndex,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[rowOrderIndex];\n      }\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      schema = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var rowOrderIndex,\n        ln = Math.min(viewData.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var columnOrderIndex,\n        rowOrderIndex,\n        headerIndex,\n        g = schema.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (\n        rowIndex = self.frozenRow + self.scrollIndexTop;\n        rowIndex < l;\n        rowIndex += 1\n      ) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        self.scrollIndexBottom = rowIndex;\n        self.scrollPixelBottom = y;\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (\n          columnOrderIndex = self.scrollIndexLeft;\n          columnOrderIndex < g;\n          columnOrderIndex += 1\n        ) {\n          headerIndex = self.orders.columns[columnOrderIndex];\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\n            schema[headerIndex],\n            headerIndex,\n            columnOrderIndex,\n          );\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([\n          self.newRow,\n          viewData.length,\n          viewData.length,\n          y,\n          rowHeight,\n        ]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < schema.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n\n  /**\n   * Removes all function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.clearEventListener = function (ev) {\n    (self.events[ev] || []).splice();\n  };\n\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.viewData || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponent) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColumnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.viewData || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.viewData.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColumnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.viewData || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.viewData[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      cell = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: cell, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (cell && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== cell.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== cell.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = cell;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = cell;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (\n      !self.draggingItem &&\n      cell &&\n      self.scrollModes.indexOf(cell.context) === -1\n    ) {\n      self.dragItem = cell;\n      self.dragMode = cell.dragContext;\n      self.cursor = cell.context;\n      if (cell.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = {\n          rowIndex: cell.rowIndex,\n          columnIndex: cell.columnIndex,\n        };\n      }\n      if ((self.selecting || self.reorderObject) && cell.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, cell.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, cell.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, cell.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, cell.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, cell.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, cell.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== cell.rowIndex ||\n          self.dragStartObject.columnIndex !== cell.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(cell.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && cell.rowIndex !== undefined) {\n              if (\n                self.selections[cell.rowIndex] &&\n                self.selections[cell.rowIndex].indexOf(cell.columnIndex) !== -1\n              ) {\n                self.selections[cell.rowIndex].splice(\n                  self.selections[cell.rowIndex].indexOf(cell.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[cell.rowIndex] =\n                self.selections[cell.rowIndex] || [];\n              if (\n                self.selections[cell.rowIndex].indexOf(cell.columnIndex) === -1\n              ) {\n                self.selections[cell.rowIndex].push(cell.columnIndex);\n\n                const event = {\n                  selections: self.selections,\n                  selectedData: self.getSelectedData(),\n                  selectionBounds: self.getSelectionBounds(),\n                };\n\n                self.dispatchEvent('selectionchanged', event);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.viewData.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n      obj: self,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selectNone();\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.viewData.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    const isSupportedHtmlTableExt = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)|(\\s*<table)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false &&\n      isSupportedHtmlTableExt(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        if (isSupportedHtmlTable(data)) {\n          // strip table beginning and ending off, then split at rows\n          var cleanedHtmlData = data\n            .substring(\n              data.indexOf('<table><tr>') + 11,\n              data.indexOf('</tr></table>'),\n            )\n            .split('</tr><tr>')\n            .filter(\n              // ditch any headers on the table\n              (row) => !/^<th>|^<thead>/.test(row),\n            )\n            .map(\n              // split row into individual cells\n              (row) =>\n                row\n                  .replace('<td></td>', '<td> </td>') //TODO: may be another way\n                  .match(/<td>[^<]+/g)\n                  .map((match) => match.replace(/^<td>/, '')),\n            );\n\n          return cleanedHtmlData;\n        } else {\n          // from excel\n        }\n      }\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      //return data.split('\\n').map((value) => [value]);  //\n      data = data.replaceAll('\\r', '').replaceAll('\"', '');\n      if (data[data.length - 1] === '\\n') {\n        data = data.slice(0, -1);\n      }\n      return data.split('\\n').map((value) => value.split('\\t'));\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    var editedCells = [];\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        if (\n          data[rowIndex][colName] != null &&\n          typeof data[rowIndex][colName] == 'object'\n        ) {\n          if (\n            self.dispatchEvent('beforebeginedit', {\n              cell: { value: data[rowIndex][colName] },\n              NativeEvent: {},\n            })\n          ) {\n            //   return false;\n          } else {\n            data[rowIndex][colName].text = cellData;\n            editedCells.push(data[rowIndex][colName]);\n          }\n        }\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.viewData[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName]; //TODO: compare text\n            continue;\n          }\n\n          if (\n            newRowData[columnName] != null &&\n            typeof newRowData[columnName] == 'object'\n          ) {\n            if (\n              self.dispatchEvent('beforebeginedit', {\n                cell: { value: newRowData[columnName] },\n                NativeEvent: {},\n              })\n            ) {\n              //   return false;\n            } else {\n              selections[realRowIndex].push(startColIndex + colIndex);\n\n              newRowData[columnName].text = cellData;\n              editedCells.push(newRowData[columnName]);\n            }\n          }\n        }\n\n        self.originalData[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n      editedCells: editedCells,\n      itself: self,\n    });\n\n    // Because originalData has been updated, we must refresh\n    // viewData to ensure the new cell values are rendered\n    self.refresh();\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/plain', 'text/csv', 'text/html'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : '\\t');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val) {\n        if (typeof val == 'object') {\n          val = val.text;\n        }\n      }\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row); //!!!\n        //if ((typeof row[rowKeys])=='object'){\n        //}\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  var touchTimerMs = 50,\r\n    debounceTouchMove,\r\n    touchMoving,\r\n    touchScrollTimeout;\r\n  self.scrollAnimation = {};\r\n  self.touchDelta = {};\r\n  self.touchAnimateTo = {};\r\n  self.animationFrames = 0;\r\n  self.getTouchPos = function (e, touchIndex) {\r\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\r\n      rect = self.canvas.getBoundingClientRect(),\r\n      pos;\r\n    if (!t) {\r\n      return;\r\n    }\r\n    pos = {\r\n      x: t.clientX - rect.left,\r\n      y: t.clientY - rect.top,\r\n    };\r\n    if (self.isChildGrid) {\r\n      pos.x -= self.canvasOffsetLeft;\r\n      pos.y -= self.canvasOffsetTop;\r\n    }\r\n    return {\r\n      x: pos.x,\r\n      y: pos.y,\r\n      rect: rect,\r\n    };\r\n  };\r\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\r\n  self.easingFunctions = {\r\n    linear: function (t) {\r\n      return t;\r\n    },\r\n    easeInQuad: function (t) {\r\n      return t * t;\r\n    },\r\n    easeOutQuad: function (t) {\r\n      return t * (2 - t);\r\n    },\r\n    easeInOutQuad: function (t) {\r\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n    },\r\n    easeInCubic: function (t) {\r\n      return t * t * t;\r\n    },\r\n    easeOutCubic: function (t) {\r\n      return --t * t * t + 1;\r\n    },\r\n    easeInOutCubic: function (t) {\r\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n    },\r\n    easeInQuart: function (t) {\r\n      return t * t * t * t;\r\n    },\r\n    easeOutQuart: function (t) {\r\n      return 1 - --t * t * t * t;\r\n    },\r\n    easeInOutQuart: function (t) {\r\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n    },\r\n    easeInQuint: function (t) {\r\n      return t * t * t * t * t;\r\n    },\r\n    easeOutQuint: function (t) {\r\n      return 1 + --t * t * t * t * t;\r\n    },\r\n    easeInOutQuint: function (t) {\r\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n    },\r\n  };\r\n  self.easing = function (t, b, c, d) {\r\n    return (\r\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\r\n    );\r\n  };\r\n  self.calculatePPSTimed = function () {\r\n    self.xPPST = -(\r\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\r\n      (self.touchDelta.t - self.touchSigmaTimed.t)\r\n    );\r\n    self.yPPST = -(\r\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\r\n      (self.touchDelta.t - self.touchSigmaTimed.t)\r\n    );\r\n    self.touchSigmaTimed = {\r\n      x: self.touchDelta.x,\r\n      y: self.touchDelta.y,\r\n      t: performance.now(),\r\n    };\r\n  };\r\n  self.calculatePPS = function () {\r\n    self.xPPS = -(\r\n      (self.touchDelta.x - self.touchSigma.x) /\r\n      (self.touchDelta.t - self.touchSigma.t)\r\n    );\r\n    self.yPPS = -(\r\n      (self.touchDelta.y - self.touchSigma.y) /\r\n      (self.touchDelta.t - self.touchSigma.t)\r\n    );\r\n    self.touchSigma = {\r\n      x: self.touchDelta.x,\r\n      y: self.touchDelta.y,\r\n      t: performance.now(),\r\n    };\r\n  };\r\n  self.touchEndAnimation = function () {\r\n    if (!self.canvas || !self.scrollBox.scrollTo) {\r\n      return requestAnimationFrame(self.touchEndAnimation);\r\n    }\r\n    var n = performance.now(),\r\n      d = self.attributes.touchReleaseAnimationDurationMs,\r\n      t;\r\n    t = n - self.touchDelta.t;\r\n    self.animationFrames += 1;\r\n    self.scrollAnimation.x = self.easing(\r\n      t,\r\n      self.touchDelta.scrollLeft,\r\n      self.touchAnimateTo.x,\r\n      d,\r\n    );\r\n    self.scrollAnimation.y = self.easing(\r\n      t,\r\n      self.touchDelta.scrollTop,\r\n      self.touchAnimateTo.y,\r\n      d,\r\n    );\r\n    if (\r\n      t > d ||\r\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\r\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\r\n      self.stopAnimation\r\n    ) {\r\n      return;\r\n    }\r\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\r\n    requestAnimationFrame(self.touchEndAnimation);\r\n  };\r\n  self.touchEditCell = function (cell) {\r\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\r\n  };\r\n  self.touchCell = function (e) {\r\n    return function () {\r\n      clearInterval(self.calculatePPSTimer);\r\n      var i,\r\n        pos = self.getTouchPos(e);\r\n      if (\r\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\r\n        self.attributes.touchDeadZone\r\n      ) {\r\n        i = self.getCellAt(pos.x, pos.y);\r\n        if (!i) {\r\n          return;\r\n        }\r\n        if (\r\n          self.touchingCell &&\r\n          self.touchingCell.rowIndex === i.rowIndex &&\r\n          self.touchingCell.columnIndex === i.columnIndex\r\n        ) {\r\n          self.touchEditCell(i);\r\n          return;\r\n        }\r\n        if (self.input && self.input.editCell) {\r\n          self.endEdit();\r\n        }\r\n        self.touchingCell = i;\r\n        self.selectArea({\r\n          top: i.rowIndex,\r\n          bottom: i.rowIndex,\r\n          left: i.columnIndex,\r\n          right: i.columnIndex,\r\n        });\r\n        self.draw(true);\r\n      }\r\n    };\r\n  };\r\n  self.touchstart = function (e) {\r\n    if (e.changedTouches[0]) {\r\n      self.touchStart = self.getTouchPos(e);\r\n      self.startingCell = self.getCellAt(\r\n        self.touchStart.x,\r\n        self.touchStart.y,\r\n        true,\r\n      );\r\n    }\r\n    if (\r\n      self.dispatchEvent('touchstart', {\r\n        NativeEvent: e,\r\n        cell: self.startingCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.disposeContextMenu();\r\n    clearInterval(self.calculatePPSTimer);\r\n    clearTimeout(self.touchContextTimeout);\r\n    self.touchStartEvent = e;\r\n    self.stopAnimation = true;\r\n    self.animationFrames = 0;\r\n    self.stopPropagation(e);\r\n    e.preventDefault();\r\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\r\n      self.touchLength = 1;\r\n      self.touchStart = self.touchStart || self.touchStart1;\r\n      self.touchScrollStart = {\r\n        x: self.scrollBox.scrollLeft,\r\n        y: self.scrollBox.scrollTop,\r\n        t: performance.now(),\r\n      };\r\n      self.touchDelta = {\r\n        x: 0,\r\n        y: 0,\r\n        scrollLeft: self.scrollBox.scrollLeft,\r\n        scrollTop: self.scrollBox.scrollTop,\r\n        t: self.touchScrollStart.t,\r\n      };\r\n      self.touchSigma = {\r\n        x: self.touchDelta.x,\r\n        y: self.touchDelta.y,\r\n        t: self.touchDelta.t,\r\n      };\r\n      self.touchSigmaTimed = {\r\n        x: self.touchDelta.x,\r\n        y: self.touchDelta.y,\r\n        t: self.touchDelta.t,\r\n      };\r\n      self.touchContextTimeout = setTimeout(function () {\r\n        self.contextmenuEvent(e, self.touchStart);\r\n      }, self.attributes.touchContextMenuTimeMs);\r\n      self.calculatePPSTimer = setInterval(\r\n        self.calculatePPSTimed,\r\n        touchTimerMs,\r\n      );\r\n      if (\r\n        self.startingCell &&\r\n        (self.startingCell.isGrid ||\r\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\r\n      ) {\r\n        self.hasFocus = false;\r\n        return;\r\n      }\r\n      self.hasFocus = true;\r\n      if (self.startingCell.isHeader) {\r\n        if (self.startingCell.isRowHeader) {\r\n          self.selectArea({\r\n            top: self.startingCell.rowIndex,\r\n            bottom: self.startingCell.rowIndex,\r\n            left: 0,\r\n            right: self.getVisibleSchema().length - 1,\r\n          });\r\n          self.draw(true);\r\n        } else if (self.startingCell.isColumnHeader) {\r\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\r\n            if (self.orderBy === self.startingCell.header.name) {\r\n              self.orderDirection =\r\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\r\n            } else {\r\n              self.orderDirection = 'asc';\r\n            }\r\n            self.order(self.startingCell.header.name, self.orderDirection);\r\n          }\r\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\r\n            self.selectArea({\r\n              top: 0,\r\n              bottom: self.viewData.length - 1,\r\n              left: self.startingCell.columnIndex,\r\n              right: self.startingCell.columnIndex,\r\n            });\r\n            self.draw(true);\r\n          }\r\n        }\r\n        self.touchEndEvents(e);\r\n        return;\r\n      }\r\n    }\r\n    if (self.zoomAltered) {\r\n      return;\r\n    }\r\n    document.body.addEventListener('touchmove', self.touchmove, {\r\n      passive: false,\r\n    });\r\n    document.body.addEventListener('touchend', self.touchend, false);\r\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\r\n    self.draw(true);\r\n  };\r\n  self.touchSelect = function (cell, handleType) {\r\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\r\n      return;\r\n    }\r\n    self.touchSelecting = true;\r\n    var bounds = self.getSelectionBounds();\r\n    if (\r\n      handleType === 'selection-handle-bl' &&\r\n      cell.rowIndex >= bounds.top &&\r\n      cell.columnIndex <= bounds.right\r\n    ) {\r\n      bounds.bottom = cell.rowIndex;\r\n      bounds.left = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-tl' &&\r\n      cell.rowIndex <= bounds.bottom &&\r\n      cell.columnIndex <= bounds.right\r\n    ) {\r\n      bounds.top = cell.rowIndex;\r\n      bounds.left = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-tr' &&\r\n      cell.rowIndex <= bounds.bottom &&\r\n      cell.columnIndex >= bounds.left\r\n    ) {\r\n      bounds.top = cell.rowIndex;\r\n      bounds.right = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-br' &&\r\n      cell.rowIndex >= bounds.top &&\r\n      cell.columnIndex >= bounds.left\r\n    ) {\r\n      bounds.bottom = cell.rowIndex;\r\n      bounds.right = cell.columnIndex;\r\n    }\r\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\r\n      bounds.left = 0;\r\n      bounds.right = self.getSchema().length - 1;\r\n    } else {\r\n      bounds.left = Math.max(0, bounds.left);\r\n    }\r\n    self.selectArea(bounds);\r\n    self.draw(true);\r\n  };\r\n  function touchMove(e) {\r\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\r\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\r\n      return;\r\n    }\r\n    clearTimeout(touchScrollTimeout);\r\n    if (e.changedTouches[0]) {\r\n      self.touchPosition = self.getTouchPos(e);\r\n    }\r\n    if (e.changedTouches[1]) {\r\n      self.touchPosition1 = self.getTouchPos(e, 1);\r\n    }\r\n    if (\r\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\r\n      self.attributes.touchDeadZone\r\n    ) {\r\n      clearTimeout(self.touchContextTimeout);\r\n    }\r\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\r\n      t1 = self.touchPosition.y;\r\n      t2 = self.touchPosition1.y;\r\n      if (!self.zoomDeltaStart) {\r\n        self.zoomDeltaStart = Math.abs(t1 - t2);\r\n        self.startScale = self.scale;\r\n      }\r\n      self.touchLength = 2;\r\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\r\n      self.scale =\r\n        self.startScale -\r\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\r\n      self.scale = Math.min(\r\n        Math.max(self.scale, self.attributes.touchZoomMin),\r\n        self.attributes.touchZoomMax,\r\n      );\r\n      self.zoomAltered = true;\r\n      self.resize(true);\r\n      self.resizeChildGrids();\r\n      return;\r\n    }\r\n    if (self.zoomAltered) {\r\n      return;\r\n    }\r\n    self.touchLength = 1;\r\n    self.touchPosition = self.touchPosition || self.touchPosition1;\r\n    ch = self.getColumnHeaderCellHeight();\r\n    rw = self.getRowHeaderCellWidth();\r\n    rScrollZone =\r\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\r\n      self.attributes.selectionScrollZone;\r\n    lScrollZone =\r\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\r\n    bScrollZone =\r\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\r\n      self.attributes.selectionScrollZone;\r\n    tScrollZone =\r\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\r\n    sbw = self.style.scrollBarWidth;\r\n    function touchScroll() {\r\n      var x = self.scrollBox.scrollLeft,\r\n        y = self.scrollBox.scrollTop;\r\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      self.scrollBox.scrollTo(x, y);\r\n      touchScrollTimeout = setTimeout(\r\n        touchScroll,\r\n        self.attributes.scrollRepeatRate,\r\n      );\r\n    }\r\n    e.stopPropagation();\r\n    self.touchDelta = {\r\n      x: self.touchPosition.x - self.touchStart.x,\r\n      y: self.touchPosition.y - self.touchStart.y,\r\n      scrollLeft: self.scrollBox.scrollLeft,\r\n      scrollTop: self.scrollBox.scrollTop,\r\n      t: performance.now(),\r\n    };\r\n    self.currentCell = self.getCellAt(\r\n      self.touchPosition.x,\r\n      self.touchPosition.y,\r\n    );\r\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\r\n    self.calculatePPS();\r\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\r\n    self.stopAnimation = true;\r\n    self.animationFrames = 0;\r\n    if (\r\n      self.touchSelecting &&\r\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\r\n    ) {\r\n      touchScroll();\r\n    }\r\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\r\n      self.scrollBox.scrollTop =\r\n        self.scrollBox.scrollHeight *\r\n        ((self.touchPosition.y - ch - sbw) /\r\n          (self.scrollBox.height - sbw - ch));\r\n      return;\r\n    }\r\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\r\n      self.scrollBox.scrollLeft =\r\n        self.scrollBox.scrollWidth *\r\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\r\n      return;\r\n    }\r\n    if (/selection-handle-/.test(self.startingCell.style)) {\r\n      self.touchSelect(self.currentCell, self.startingCell.style);\r\n      return;\r\n    }\r\n    self.scrollBox.scrollTo(\r\n      self.touchScrollStart.x - self.touchDelta.x,\r\n      self.touchScrollStart.y - self.touchDelta.y,\r\n    );\r\n  }\r\n  self.touchmove = function (e) {\r\n    if (touchMoving) {\r\n      return;\r\n    }\r\n    requestAnimationFrame(function () {\r\n      touchMoving = true;\r\n      touchMove(e);\r\n      touchMoving = false;\r\n    });\r\n  };\r\n  self.touchEndEvents = function (e) {\r\n    self.zoomDeltaStart = undefined;\r\n    self.touchSelecting = false;\r\n    clearInterval(self.touchScrollTimeout);\r\n    clearInterval(self.touchContextTimeout);\r\n    clearInterval(self.calculatePPSTimer);\r\n    e.stopPropagation();\r\n    document.body.removeEventListener('touchmove', self.touchmove, {\r\n      passive: false,\r\n    });\r\n    document.body.removeEventListener('touchend', self.touchend, false);\r\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\r\n  };\r\n  self.touchend = function (e) {\r\n    if (\r\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    self.zoomDeltaStart = undefined;\r\n    if (e.changedTouches[0]) {\r\n      self.touchPosition = undefined;\r\n    }\r\n    if (e.changedTouches[1]) {\r\n      self.touchPosition1 = undefined;\r\n    }\r\n    if (self.zoomAltered) {\r\n      if (e.touches.length === 0) {\r\n        self.zoomAltered = false;\r\n      }\r\n      return;\r\n    }\r\n    var dz =\r\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\r\n      self.attributes.touchDeadZone;\r\n    if (isNaN(self.xPPS)) {\r\n      self.xPPS = 0;\r\n    }\r\n    if (isNaN(self.yPPS)) {\r\n      self.yPPS = 0;\r\n    }\r\n    if (isNaN(self.xPPST)) {\r\n      self.xPPST = 0;\r\n    }\r\n    if (isNaN(self.yPPST)) {\r\n      self.yPPST = 0;\r\n    }\r\n    self.touchAnimateTo.x =\r\n      self.xPPS * self.attributes.touchReleaseAcceleration;\r\n    self.touchAnimateTo.y =\r\n      self.yPPS * self.attributes.touchReleaseAcceleration;\r\n    self.calculatePPSTimed();\r\n    if (dz && !self.contextMenu) {\r\n      self.touchCell(self.touchStartEvent)();\r\n    } else if (\r\n      self.animationFrames === 0 &&\r\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\r\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\r\n      !/-scroll-/.test(self.startingCell.style) &&\r\n      !dz\r\n    ) {\r\n      self.stopAnimation = false;\r\n      self.touchEndAnimation();\r\n    }\r\n    self.touchEndEvents(e);\r\n  };\r\n  self.touchcancel = function (e) {\r\n    if (\r\n      self.dispatchEvent('touchcancel', {\r\n        NativeEvent: e,\r\n        cell: self.currentCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.touchEndEvents(e);\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self, ctor) {\r\n  self.scale = 1;\r\n  self.orders = {\r\n    rows: [],\r\n    columns: [],\r\n  };\r\n  self.appliedInlineStyles = {};\r\n  self.cellGridAttributes = {};\r\n  self.treeGridAttributes = {};\r\n  self.visibleRowHeights = [];\r\n  self.hasFocus = false;\r\n  self.activeCell = {\r\n    columnIndex: 0,\r\n    rowIndex: 0,\r\n  };\r\n  self.innerHTML = '';\r\n  self.storageName = 'canvasDataGrid';\r\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\r\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\r\n  self.dataType = 'application/x-canvas-datagrid';\r\n  self.orderBy = null;\r\n  self.orderDirection = 'asc';\r\n  self.orderings = {\r\n    columns: [],\r\n    add: function (orderBy, orderDirection, sortFunction) {\r\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\r\n        return col.orderBy !== orderBy;\r\n      });\r\n      self.orderings.columns.push({\r\n        orderBy: orderBy,\r\n        orderDirection: orderDirection,\r\n        sortFunction: sortFunction,\r\n      });\r\n    },\r\n    sort: function () {\r\n      console.warn(\r\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\r\n      );\r\n\r\n      self.orderings.columns.forEach(function (col) {\r\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\r\n      });\r\n    },\r\n  };\r\n  self.columnFilters = {};\r\n  self.filters = {};\r\n  self.frozenRow = 0;\r\n  self.frozenColumn = 0;\r\n  self.ellipsisCache = {};\r\n  self.scrollCache = { x: [], y: [] };\r\n  self.scrollBox = {};\r\n  self.visibleRows = [];\r\n  self.visibleCells = [];\r\n  self.sizes = {\r\n    rows: {},\r\n    columns: {},\r\n    trees: {},\r\n  };\r\n  self.selections = [];\r\n  self.hovers = {};\r\n  self.attributes = {};\r\n  self.style = {};\r\n  self.formatters = {};\r\n  self.sorters = {};\r\n  self.parsers = {};\r\n  self.schemaHashes = {};\r\n  self.events = {};\r\n  self.changes = [];\r\n  self.scrollIndexTop = 0;\r\n  self.scrollPixelTop = 0;\r\n  self.scrollIndexLeft = 0;\r\n  self.scrollPixelLeft = 0;\r\n  self.childGrids = {};\r\n  self.openChildren = {};\r\n  self.scrollModes = [\r\n    'vertical-scroll-box',\r\n    'vertical-scroll-top',\r\n    'vertical-scroll-bottom',\r\n    'horizontal-scroll-box',\r\n    'horizontal-scroll-right',\r\n    'horizontal-scroll-left',\r\n  ];\r\n  self.componentL1Events = {};\r\n  self.eventNames = [\r\n    'afterdraw',\r\n    'afterrendercell',\r\n    'attributechanged',\r\n    'beforebeginedit',\r\n    'beforecreatecellgrid',\r\n    'beforedraw',\r\n    'beforeendedit',\r\n    'beforerendercell',\r\n    'beforerendercellgrid',\r\n    'beginedit',\r\n    'cellmouseout',\r\n    'cellmouseover',\r\n    'click',\r\n    'collapsetree',\r\n    'contextmenu',\r\n    'copy',\r\n    'datachanged',\r\n    'dblclick',\r\n    'endedit',\r\n    'expandtree',\r\n    'formatcellvalue',\r\n    'keydown',\r\n    'keypress',\r\n    'keyup',\r\n    'mousedown',\r\n    'mousemove',\r\n    'mouseup',\r\n    'newrow',\r\n    'ordercolumn',\r\n    'rendercell',\r\n    'rendercellgrid',\r\n    'renderorderbyarrow',\r\n    'rendertext',\r\n    'rendertreearrow',\r\n    'reorder',\r\n    'reordering',\r\n    'resize',\r\n    'resizecolumn',\r\n    'resizerow',\r\n    'schemachanged',\r\n    'scroll',\r\n    'selectionchanged',\r\n    'stylechanged',\r\n    'touchcancel',\r\n    'touchend',\r\n    'touchmove',\r\n    'touchstart',\r\n    'wheel',\r\n  ];\r\n  self.mouse = { x: 0, y: 0 };\r\n  self.getSelectedData = function (expandToRow) {\r\n    const selectedData = [];\r\n    const schema = self.getSchema();\r\n    const viewDataLength = self.viewData.length;\r\n\r\n    if (viewDataLength === 0) {\r\n      return [];\r\n    }\r\n\r\n    // self.selections is a sparse array, so `viewRowIndex` here\r\n    // will equal the row index as where it's rendered,\r\n    // not as where it is in the original data array.\r\n    self.selections.forEach(function (row, viewRowIndex) {\r\n      if (!row) {\r\n        return;\r\n      }\r\n\r\n      if (viewRowIndex === viewDataLength) {\r\n        return;\r\n      }\r\n\r\n      if (row.length === 0) {\r\n        selectedData[viewRowIndex] = null;\r\n        return;\r\n      }\r\n\r\n      selectedData[viewRowIndex] = {};\r\n\r\n      row.forEach(function (col) {\r\n        if (col === -1 || !schema[col]) {\r\n          return;\r\n        }\r\n\r\n        const orderedIndex = self.orders.columns[col];\r\n\r\n        if (!expandToRow && schema[orderedIndex].hidden) {\r\n          return;\r\n        }\r\n\r\n        if (self.viewData[viewRowIndex]) {\r\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\r\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\r\n        }\r\n      });\r\n    });\r\n\r\n    return selectedData;\r\n  };\r\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\r\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\r\n      return self.boundRowIndexMap.get(viewRowIndex);\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n  self.getColumnHeaderCellHeight = function () {\r\n    if (!self.attributes.showColumnHeaders) {\r\n      return 0;\r\n    }\r\n    return (\r\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\r\n    );\r\n  };\r\n  self.getRowHeaderCellWidth = function () {\r\n    if (!self.attributes.showRowHeaders) {\r\n      return 0;\r\n    }\r\n    return (\r\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\r\n    );\r\n  };\r\n  self.setStorageData = function () {\r\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\r\n      return;\r\n    }\r\n    var visibility = {};\r\n    self.getSchema().forEach(function (column) {\r\n      visibility[column.name] = !column.hidden;\r\n    });\r\n    localStorage.setItem(\r\n      self.storageName + '-' + self.attributes.name,\r\n      JSON.stringify({\r\n        sizes: {\r\n          rows: self.sizes.rows,\r\n          columns: self.sizes.columns,\r\n        },\r\n        orders: {\r\n          rows: self.orders.rows,\r\n          columns: self.orders.columns,\r\n        },\r\n        orderBy: self.orderBy,\r\n        orderDirection: self.orderDirection,\r\n        visibility: visibility,\r\n      }),\r\n    );\r\n  };\r\n  self.getSchema = function () {\r\n    return self.schema || self.tempSchema || [];\r\n  };\r\n  function fillArray(low, high) {\r\n    var i = [],\r\n      x;\r\n    for (x = low; x <= high; x += 1) {\r\n      i[x] = x;\r\n    }\r\n    return i;\r\n  }\r\n  self.createColumnOrders = function () {\r\n    var s = self.getSchema();\r\n    self.orders.columns = fillArray(0, s.length - 1);\r\n  };\r\n  self.createRowOrders = function () {\r\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\r\n  };\r\n  self.getVisibleSchema = function () {\r\n    return self.getSchema().filter(function (col) {\r\n      return !col.hidden;\r\n    });\r\n  };\r\n  self.applyDefaultValue = function (row, header, rowIndex) {\r\n    var d = header.defaultValue || '';\r\n    if (typeof d === 'function') {\r\n      d = d.apply(self.intf, [header, rowIndex]);\r\n    }\r\n    row[header.name] = d;\r\n  };\r\n  self.createNewRowData = function () {\r\n    self.newRow = {};\r\n\r\n    // The third argument of applyDefaultValue is the row index\r\n    // of the row for which to apply the default value. In this\r\n    // case, we're creating a new row but not yet appending it\r\n    // to self.originalData, so no row index exists\r\n    const newRowIndex = undefined;\r\n\r\n    self.getSchema().forEach(function forEachHeader(header) {\r\n      self.applyDefaultValue(self.newRow, header, newRowIndex);\r\n    });\r\n  };\r\n  self.getSchemaNameHash = function (key) {\r\n    var n = 0;\r\n    while (self.schemaHashes[key]) {\r\n      n += 1;\r\n      key = key + n;\r\n    }\r\n    return key;\r\n  };\r\n  self.filter = function (type) {\r\n    var f = self.filters[type];\r\n    if (!f && type !== undefined) {\r\n      console.warn(\r\n        'Cannot find filter for type %s, falling back to substring match.',\r\n        type,\r\n      );\r\n      f = self.filters.string;\r\n    }\r\n    return f;\r\n  };\r\n  self.hasActiveFilters = function () {\r\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\r\n  };\r\n  self.getFilteredAndSortedViewData = function (originalData) {\r\n    // We make a copy of originalData here in order be able to\r\n    // filter and sort rows without modifying the original array.\r\n    // Each row is turned into a (row, rowIndex) tuple\r\n    // so that when we apply filters, we can refer back to the\r\n    // row's original row number in originalData. This becomes\r\n    // useful when emitting cell events.\r\n    let newViewData = originalData.map((row, originalRowIndex) => [\r\n      row,\r\n      originalRowIndex,\r\n    ]);\r\n\r\n    // Apply filtering\r\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\r\n      const header = self.getHeaderByName(headerName);\r\n\r\n      if (!header) {\r\n        continue;\r\n      }\r\n\r\n      const currentFilterFunction =\r\n        header.filter || self.filter(header.type || 'string');\r\n\r\n      newViewData = newViewData.filter(function ([row]) {\r\n        const cellValue = row[headerName];\r\n        const shouldIncludeRow = currentFilterFunction(cellValue, filterText);\r\n\r\n        return shouldIncludeRow;\r\n      });\r\n    }\r\n\r\n    // Apply sorting\r\n    for (const column of self.orderings.columns) {\r\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\r\n\r\n      newViewData.sort(([rowA], [rowB]) => sortFn(rowA, rowB));\r\n    }\r\n\r\n    return {\r\n      viewData: newViewData.map(([row]) => row),\r\n      boundRowIndexMap: new Map(\r\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\r\n          viewRowIndex,\r\n          originalRowIndex,\r\n        ]),\r\n      ),\r\n    };\r\n  };\r\n  self.refresh = function () {\r\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\r\n      self.originalData,\r\n    );\r\n\r\n    self.viewData = viewData;\r\n    self.boundRowIndexMap = boundRowIndexMap;\r\n\r\n    self.resize();\r\n    self.draw(true);\r\n  };\r\n  self.getBestGuessDataType = function (columnName, data) {\r\n    var t,\r\n      x,\r\n      l = data.length;\r\n    for (x = 0; x < l; x += 1) {\r\n      if (\r\n        data[x] !== undefined &&\r\n        data[x] !== null &&\r\n        [null, undefined].indexOf(data[x][columnName]) !== -1\r\n      ) {\r\n        t = typeof data[x];\r\n        return t === 'object' ? 'string' : t;\r\n      }\r\n    }\r\n    return 'string';\r\n  };\r\n  self.drawChildGrids = function () {\r\n    Object.keys(self.childGrids).forEach(function (gridKey) {\r\n      self.childGrids[gridKey].draw();\r\n    });\r\n  };\r\n  self.resizeChildGrids = function () {\r\n    Object.keys(self.childGrids).forEach(function (gridKey) {\r\n      self.childGrids[gridKey].resize();\r\n    });\r\n  };\r\n  self.autoScrollZone = function (e, x, y, ctrl) {\r\n    var setTimer,\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\r\n    if (y !== -1) {\r\n      if (\r\n        x > self.width - self.attributes.selectionScrollZone &&\r\n        x < self.width\r\n      ) {\r\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\r\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n    }\r\n    if (y !== -1) {\r\n      if (\r\n        y > self.height - self.attributes.selectionScrollZone &&\r\n        y < self.height\r\n      ) {\r\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n      if (\r\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\r\n        0\r\n      ) {\r\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n    }\r\n    if (\r\n      setTimer &&\r\n      !ctrl &&\r\n      self.currentCell &&\r\n      self.currentCell.columnIndex !== -1\r\n    ) {\r\n      self.scrollTimer = setTimeout(\r\n        self.mousemove,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    }\r\n  };\r\n  self.validateColumn = function (c, s) {\r\n    if (!c.name) {\r\n      throw new Error('A column must contain at least a name.');\r\n    }\r\n    if (\r\n      s.filter(function (i) {\r\n        return i.name === c.name;\r\n      }).length > 0\r\n    ) {\r\n      throw new Error(\r\n        'A column with the name ' +\r\n          c.name +\r\n          ' already exists and cannot be added again.',\r\n      );\r\n    }\r\n    return true;\r\n  };\r\n  self.setDefaults = function (obj1, obj2, key, def) {\r\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\r\n  };\r\n  self.setAttributes = function () {\r\n    self.defaults.attributes.forEach(function eachAttribute(i) {\r\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\r\n    });\r\n  };\r\n  self.setStyle = function () {\r\n    self.defaults.styles.forEach(function eachStyle(i) {\r\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\r\n    });\r\n  };\r\n  self.autosize = function (colName) {\r\n    self.getVisibleSchema().forEach(function (col, colIndex) {\r\n      if (col.name === colName || colName === undefined) {\r\n        self.sizes.columns[colIndex] = Math.max(\r\n          self.findColumnMaxTextLength(col.name),\r\n          self.style.minColumnWidth,\r\n        );\r\n      }\r\n    });\r\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\r\n  };\r\n  self.dispose = function () {\r\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\r\n      self.canvas.parentNode.removeChild(self.canvas);\r\n    }\r\n    if (!self.isChildGrid) {\r\n      document.body.removeChild(self.controlInput);\r\n    }\r\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\r\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\r\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\r\n    self.eventParent.removeEventListener('click', self.click, false);\r\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\r\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\r\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\r\n    self.canvas.removeEventListener('copy', self.copy);\r\n    self.controlInput.removeEventListener('copy', self.copy);\r\n    self.controlInput.removeEventListener('cut', self.cut);\r\n    self.controlInput.removeEventListener('paste', self.paste);\r\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\r\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\r\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\r\n    window.removeEventListener('resize', self.resize);\r\n    if (self.observer && self.observer.disconnect) {\r\n      self.observer.disconnect();\r\n    }\r\n  };\r\n  self.tryLoadStoredSettings = function () {\r\n    var s;\r\n    self.reloadStoredValues();\r\n    if (\r\n      self.storedSettings &&\r\n      typeof self.storedSettings.orders === 'object' &&\r\n      self.storedSettings.orders !== null\r\n    ) {\r\n      if (\r\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\r\n      ) {\r\n        self.orders.rows = self.storedSettings.orders.rows;\r\n      }\r\n      s = self.getSchema();\r\n      if (self.storedSettings.orders.columns.length === s.length) {\r\n        self.orders.columns = self.storedSettings.orders.columns;\r\n      }\r\n      self.orderBy =\r\n        self.storedSettings.orderBy === undefined\r\n          ? s[0].name\r\n          : self.storedSettings.orderBy;\r\n      self.orderDirection =\r\n        self.storedSettings.orderDirection === undefined\r\n          ? 'asc'\r\n          : self.storedSettings.orderDirection;\r\n      if (\r\n        self.storedSettings.orderBy !== undefined &&\r\n        self.getHeaderByName(self.orderBy) &&\r\n        self.orderDirection\r\n      ) {\r\n        self.order(self.orderBy, self.orderDirection);\r\n      }\r\n    }\r\n  };\r\n  self.getDomRoot = function () {\r\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\r\n  };\r\n  self.getFontName = function (fontStyle) {\r\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\r\n  };\r\n  self.getFontHeight = function (fontStyle) {\r\n    return parseFloat(fontStyle, 10);\r\n  };\r\n  self.parseStyleValue = function (key) {\r\n    if (/Font/.test(key)) {\r\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\r\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\r\n      return;\r\n    }\r\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\r\n    if (\r\n      key === 'moveOverlayBorderSegments' &&\r\n      typeof self.style[key] === 'string'\r\n    ) {\r\n      self.style[key] = self.style[key].split(',').map(function (i) {\r\n        return parseInt(i, 10);\r\n      });\r\n    }\r\n  };\r\n  self.initProp = function (propName) {\r\n    if (!self.args[propName]) {\r\n      return;\r\n    }\r\n    Object.keys(self.args[propName]).forEach(function (key) {\r\n      self[propName][key] = self.args[propName][key];\r\n    });\r\n  };\r\n  self.getStyleProperty = function (key) {\r\n    if (self.styleKeys.indexOf(key) === -1) {\r\n      return self.parentNodeStyle[key];\r\n    }\r\n    return self.style[key];\r\n  };\r\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\r\n    var isDim =\r\n      [\r\n        'height',\r\n        'width',\r\n        'minHeight',\r\n        'minWidth',\r\n        'maxHeight',\r\n        'maxWidth',\r\n      ].indexOf(key) !== -1;\r\n    if (self.styleKeys.indexOf(key) === -1) {\r\n      self.parentNodeStyle[key] = value;\r\n    } else {\r\n      if (/-/.test(key)) {\r\n        key = self.dehyphenateProperty(key);\r\n      }\r\n      self.style[key] = value;\r\n      self.parseStyleValue(key);\r\n    }\r\n    if (isDim) {\r\n      self.resize();\r\n    }\r\n    if (!supressDrawAndEvent) {\r\n      self.draw(true);\r\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\r\n    }\r\n  };\r\n  self.reloadStoredValues = function () {\r\n    if (self.attributes.name && self.attributes.saveAppearance) {\r\n      try {\r\n        self.storedSettings = localStorage.getItem(\r\n          self.storageName + '-' + self.attributes.name,\r\n        );\r\n      } catch (e) {\r\n        console.warn('Error loading stored values. ' + e.message);\r\n        self.storedSettings = undefined;\r\n      }\r\n      if (self.storedSettings) {\r\n        try {\r\n          self.storedSettings = JSON.parse(self.storedSettings);\r\n        } catch (e) {\r\n          console.warn('could not read settings from localStore', e);\r\n          self.storedSettings = undefined;\r\n        }\r\n      }\r\n      if (self.storedSettings) {\r\n        if (\r\n          typeof self.storedSettings.sizes === 'object' &&\r\n          self.storedSettings.sizes !== null\r\n        ) {\r\n          self.sizes.rows = self.storedSettings.sizes.rows;\r\n          self.sizes.columns = self.storedSettings.sizes.columns;\r\n          ['trees', 'columns', 'rows'].forEach(function (i) {\r\n            if (!self.sizes[i]) {\r\n              self.sizes[i] = {};\r\n            }\r\n          });\r\n        }\r\n        if (typeof self.storedSettings.visibility === 'object') {\r\n          self.getSchema().forEach(function (column) {\r\n            if (\r\n              self.storedSettings.visibility &&\r\n              self.storedSettings.visibility[column.name] !== undefined\r\n            ) {\r\n              column.hidden = !self.storedSettings.visibility[column.name];\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  self.init = function () {\r\n    if (self.initialized) {\r\n      return;\r\n    }\r\n    function addStyleKeyIfNoneExists(key) {\r\n      if (self.styleKeys.indexOf(key) === -1) {\r\n        self.styleKeys.push(key);\r\n      }\r\n    }\r\n    var publicStyleKeyIntf = {};\r\n    self.setAttributes();\r\n    self.setStyle();\r\n    self.initScrollBox();\r\n    self.setDom();\r\n    self.nodeType = 'canvas-datagrid';\r\n    self.ie = /Trident/.test(window.navigator.userAgent);\r\n    self.edge = /Edge/.test(window.navigator.userAgent);\r\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\r\n    self.moz = /Gecko/.test(window.navigator.userAgent);\r\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\r\n    self.blankValues = [undefined, null, ''];\r\n    self.cursorGrab = 'grab';\r\n    self.cursorGrabing = 'grabbing';\r\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\r\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\r\n    self.pointerLockPosition = { x: 0, y: 0 };\r\n    Object.keys(self.style).forEach(self.parseStyleValue);\r\n    self.intf.moveSelection = self.moveSelection;\r\n    self.intf.moveTo = self.moveTo;\r\n    self.intf.addEventListener = self.addEventListener;\r\n    self.intf.removeEventListener = self.removeEventListener;\r\n    self.intf.dispatchEvent = self.dispatchEvent;\r\n    /**\r\n     * Releases grid resources and removes grid elements.\r\n     * @memberof canvasDatagrid\r\n     * @name dispose\r\n     * @method\r\n     */\r\n    self.intf.dispose = self.dispose;\r\n    /**\r\n     * Appends the grid to another element later.  Not implemented.\r\n     * @memberof canvasDatagrid\r\n     * @name appendTo\r\n     * @method\r\n     * @param {number} el The element to append the grid to.\r\n     */\r\n    self.intf.appendTo = self.appendTo;\r\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\r\n    self.intf.filters = self.filters;\r\n    self.intf.sorters = self.sorters;\r\n    self.intf.autosize = self.autosize;\r\n    self.intf.beginEditAt = self.beginEditAt;\r\n    self.intf.endEdit = self.endEdit;\r\n    self.intf.setActiveCell = self.setActiveCell;\r\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\r\n    self.intf.scrollIntoView = self.scrollIntoView;\r\n    self.intf.clearChangeLog = self.clearChangeLog;\r\n    self.intf.gotoCell = self.gotoCell;\r\n    self.intf.gotoRow = self.gotoRow;\r\n    self.intf.getHeaderByName = self.getHeaderByName;\r\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\r\n    self.intf.findRowScrollTop = self.findRowScrollTop;\r\n    self.intf.fitColumnToValues = self.fitColumnToValues;\r\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\r\n    self.intf.disposeContextMenu = self.disposeContextMenu;\r\n    self.intf.getCellAt = self.getCellAt;\r\n    self.intf.isCellVisible = self.isCellVisible;\r\n    self.intf.isRowVisible = self.isRowVisible;\r\n    self.intf.isColumnVisible = self.isColumnVisible;\r\n    self.intf.order = self.order;\r\n    self.intf.draw = self.draw;\r\n    self.intf.refresh = self.refresh;\r\n    self.intf.isComponent = self.isComponent;\r\n    self.intf.selectArea = self.selectArea;\r\n    self.intf.clipElement = self.clipElement;\r\n    self.intf.getSchemaFromData = self.getSchemaFromData;\r\n    self.intf.setFilter = self.setFilter;\r\n    self.intf.selectRow = self.selectRow;\r\n    self.intf.parentGrid = self.parentGrid;\r\n    self.intf.toggleTree = self.toggleTree;\r\n    self.intf.expandTree = self.expandTree;\r\n    self.intf.collapseTree = self.collapseTree;\r\n    self.intf.canvas = self.canvas;\r\n    self.intf.context = self.ctx;\r\n    self.intf.insertRow = self.insertRow;\r\n    self.intf.deleteRow = self.deleteRow;\r\n    self.intf.addRow = self.addRow;\r\n    self.intf.insertColumn = self.insertColumn;\r\n    self.intf.deleteColumn = self.deleteColumn;\r\n    self.intf.addColumn = self.addColumn;\r\n    self.intf.getClippingRect = self.getClippingRect;\r\n    self.intf.setRowHeight = self.setRowHeight;\r\n    self.intf.setColumnWidth = self.setColumnWidth;\r\n    self.intf.resetColumnWidths = self.resetColumnWidths;\r\n    self.intf.resetRowHeights = self.resetRowHeights;\r\n    self.intf.resize = self.resize;\r\n    self.intf.selectColumn = self.selectColumn;\r\n    self.intf.selectRow = self.selectRow;\r\n    self.intf.selectAll = self.selectAll;\r\n    self.intf.selectNone = self.selectNone;\r\n    self.intf.drawChildGrids = self.drawChildGrids;\r\n    self.intf.assertPxColor = self.assertPxColor;\r\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\r\n    self.intf.integerToAlpha = self.integerToAlpha;\r\n    self.intf.copy = self.copy;\r\n    self.intf.paste = self.paste;\r\n    self.intf.setStyleProperty = self.setStyleProperty;\r\n    Object.defineProperty(self.intf, 'defaults', {\r\n      get: function () {\r\n        return {\r\n          styles: self.defaults.styles.reduce(function (a, i) {\r\n            a[i[0]] = i[1];\r\n            return a;\r\n          }, {}),\r\n          attributes: self.defaults.attributes.reduce(function (a, i) {\r\n            a[i[0]] = i[1];\r\n            return a;\r\n          }, {}),\r\n        };\r\n      },\r\n    });\r\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\r\n    self.styleKeys\r\n      .map(function (i) {\r\n        return self.hyphenateProperty(i, false);\r\n      })\r\n      .forEach(addStyleKeyIfNoneExists);\r\n    self.styleKeys\r\n      .map(function (i) {\r\n        return self.hyphenateProperty(i, true);\r\n      })\r\n      .forEach(addStyleKeyIfNoneExists);\r\n    self.DOMStyles = window.getComputedStyle(document.body, null);\r\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\r\n      // unless this line is here, Object.keys() will not work on <instance>.style\r\n      publicStyleKeyIntf[key] = undefined;\r\n      Object.defineProperty(publicStyleKeyIntf, key, {\r\n        get: function () {\r\n          return self.getStyleProperty(key);\r\n        },\r\n        set: function (value) {\r\n          if (self.initialized) {\r\n            self.appliedInlineStyles[key] = value;\r\n          }\r\n          self.setStyleProperty(key, value);\r\n        },\r\n      });\r\n    });\r\n    Object.defineProperty(self.intf, 'shadowRoot', {\r\n      get: function () {\r\n        return self.shadowRoot;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'activeCell', {\r\n      get: function () {\r\n        return self.activeCell;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'hasFocus', {\r\n      get: function () {\r\n        return self.hasFocus;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\r\n      get: function () {\r\n        return self.hasActiveFilters();\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'style', {\r\n      get: function () {\r\n        return publicStyleKeyIntf;\r\n      },\r\n      set: function (valueObject) {\r\n        Object.keys(valueObject).forEach(function (key) {\r\n          self.setStyleProperty(key, valueObject[key], true);\r\n        });\r\n        self.draw(true);\r\n        self.dispatchEvent('stylechanged', {\r\n          name: 'style',\r\n          value: valueObject,\r\n        });\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\r\n    Object.keys(self.attributes).forEach(function (key) {\r\n      Object.defineProperty(self.intf.attributes, key, {\r\n        get: function () {\r\n          return self.attributes[key];\r\n        },\r\n        set: function (value) {\r\n          self.attributes[key] = value;\r\n          if (key === 'name') {\r\n            self.tryLoadStoredSettings();\r\n          }\r\n          self.draw(true);\r\n          self.dispatchEvent('attributechanged', {\r\n            name: key,\r\n            value: value[key],\r\n          });\r\n        },\r\n      });\r\n    });\r\n    self.filters.string = function (value, filterFor) {\r\n      if (filterFor === self.attributes.blanksText) {\r\n        return self.blankValues.includes(\r\n          value == null ? value : String(value).trim(),\r\n        );\r\n      }\r\n\r\n      value = String(value);\r\n      var filterRegExp,\r\n        regEnd = /\\/(i|g|m)*$/,\r\n        pattern = regEnd.exec(filterFor),\r\n        flags = pattern ? pattern[0].substring(1) : '',\r\n        flagLength = flags.length;\r\n      self.invalidFilterRegEx = undefined;\r\n      if (filterFor.substring(0, 1) === '/' && pattern) {\r\n        try {\r\n          filterRegExp = new RegExp(\r\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\r\n            flags,\r\n          );\r\n        } catch (e) {\r\n          self.invalidFilterRegEx = e;\r\n          return;\r\n        }\r\n        return filterRegExp.test(value);\r\n      }\r\n      return value.toString\r\n        ? value\r\n            .toString()\r\n            .toLocaleUpperCase()\r\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\r\n        : false;\r\n    };\r\n    self.filters.number = function (value, filterFor) {\r\n      if (filterFor === self.attributes.blanksText) {\r\n        return self.blankValues.includes(\r\n          value == null ? value : String(value).trim(),\r\n        );\r\n      }\r\n\r\n      if (!filterFor) {\r\n        return true;\r\n      }\r\n      return value === filterFor;\r\n    };\r\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\r\n    self.applyComponentStyle(false, self.intf);\r\n    self.reloadStoredValues();\r\n    if (self.args.data) {\r\n      self.intf.data = self.args.data;\r\n    }\r\n    if (self.intf.innerText || self.intf.textContent) {\r\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\r\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\r\n      }\r\n      self.intf.data = self.intf.innerText || self.intf.textContent;\r\n    }\r\n    if (self.args.schema) {\r\n      self.intf.schema = self.args.schema;\r\n    }\r\n    if (self.isChildGrid || !self.isComponent) {\r\n      requestAnimationFrame(function () {\r\n        self.resize(true);\r\n      });\r\n    } else {\r\n      self.resize(true);\r\n    }\r\n    self.initialized = true;\r\n    return self;\r\n  };\r\n  /**\r\n   * Removes focus from the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name blur\r\n   * @method\r\n   */\r\n  self.intf.blur = function (e) {\r\n    self.hasFocus = false;\r\n  };\r\n  /**\r\n   * Focuses on the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name focus\r\n   * @method\r\n   */\r\n  self.intf.focus = function () {\r\n    self.hasFocus = true;\r\n    self.controlInput.focus();\r\n  };\r\n  if (self.shadowRoot || self.isChildGrid) {\r\n    Object.defineProperty(self.intf, 'height', {\r\n      get: function () {\r\n        if (self.shadowRoot) {\r\n          return self.shadowRoot.height;\r\n        }\r\n        return self.parentNode.height;\r\n      },\r\n      set: function (value) {\r\n        if (self.shadowRoot) {\r\n          self.shadowRoot.height = value;\r\n        } else {\r\n          self.parentNode.height = value;\r\n        }\r\n        self.resize(true);\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'width', {\r\n      get: function () {\r\n        if (self.shadowRoot) {\r\n          return self.shadowRoot.width;\r\n        }\r\n        return self.parentNode.width;\r\n      },\r\n      set: function (value) {\r\n        if (self.shadowRoot) {\r\n          self.shadowRoot.width = value;\r\n        } else {\r\n          self.parentNode.width = value;\r\n        }\r\n        self.resize(true);\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'parentNode', {\r\n      get: function () {\r\n        return self.parentNode;\r\n      },\r\n      set: function (value) {\r\n        if (!self.isChildGrid) {\r\n          throw new TypeError(\r\n            'Cannot set property parentNode which has only a getter',\r\n          );\r\n        }\r\n        self.parentNode = value;\r\n      },\r\n    });\r\n  }\r\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\r\n    get: function () {\r\n      return self.visibleRowHeights;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'openChildren', {\r\n    get: function () {\r\n      return self.openChildren;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'childGrids', {\r\n    get: function () {\r\n      return Object.keys(self.childGrids).map(function (gridId) {\r\n        return self.childGrids[gridId];\r\n      });\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'isChildGrid', {\r\n    get: function () {\r\n      return self.isChildGrid;\r\n    },\r\n  });\r\n  Object.defineProperty(self, 'cursor', {\r\n    get: function () {\r\n      return self.parentNodeStyle.cursor;\r\n    },\r\n    set: function (value) {\r\n      if (value === 'cell') {\r\n        value = 'default';\r\n      }\r\n      if (self.currentCursor !== value) {\r\n        self.parentNodeStyle.cursor = value;\r\n        self.currentCursor = value;\r\n      }\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'orderDirection', {\r\n    get: function () {\r\n      return self.orderDirection;\r\n    },\r\n    set: function (value) {\r\n      if (value !== 'desc') {\r\n        value = 'asc';\r\n      }\r\n      self.orderDirection = value;\r\n      self.order(self.orderBy, self.orderDirection);\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'orderBy', {\r\n    get: function () {\r\n      return self.orderBy;\r\n    },\r\n    set: function (value) {\r\n      if (\r\n        self.getSchema().find(function (col) {\r\n          return col.name === value;\r\n        }) === undefined\r\n      ) {\r\n        throw new Error('Cannot sort by unknown column name.');\r\n      }\r\n      self.orderBy = value;\r\n      self.order(self.orderBy, self.orderDirection);\r\n    },\r\n  });\r\n  if (self.isComponent) {\r\n    Object.defineProperty(self.intf, 'offsetHeight', {\r\n      get: function () {\r\n        return self.canvas.offsetHeight;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'offsetWidth', {\r\n      get: function () {\r\n        return self.canvas.offsetWidth;\r\n      },\r\n    });\r\n  }\r\n  Object.defineProperty(self.intf, 'scrollHeight', {\r\n    get: function () {\r\n      return self.scrollBox.scrollHeight;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollWidth', {\r\n    get: function () {\r\n      return self.scrollBox.scrollWidth;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollTop', {\r\n    get: function () {\r\n      return self.scrollBox.scrollTop;\r\n    },\r\n    set: function (value) {\r\n      self.scrollBox.scrollTop = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollLeft', {\r\n    get: function () {\r\n      return self.scrollBox.scrollLeft;\r\n    },\r\n    set: function (value) {\r\n      self.scrollBox.scrollLeft = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'sizes', {\r\n    get: function () {\r\n      return self.sizes;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'parentDOMNode', {\r\n    get: function () {\r\n      return self.parentDOMNode;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'input', {\r\n    get: function () {\r\n      return self.input;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'controlInput', {\r\n    get: function () {\r\n      return self.controlInput;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'currentCell', {\r\n    get: function () {\r\n      return self.currentCell;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleCells', {\r\n    get: function () {\r\n      return self.visibleCells;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleRows', {\r\n    get: function () {\r\n      return self.visibleRows;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selections', {\r\n    get: function () {\r\n      return self.selections;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'dragMode', {\r\n    get: function () {\r\n      return self.dragMode;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'changes', {\r\n    get: function () {\r\n      return self.changes;\r\n    },\r\n  });\r\n  self.intf.formatters = self.formatters;\r\n  Object.defineProperty(self.intf, 'dataType', {\r\n    get: function () {\r\n      return self.dataType;\r\n    },\r\n    set: function (value) {\r\n      if (!self.parsers[value]) {\r\n        throw new Error('No parser for MIME type ' + value);\r\n      }\r\n      self.dataType = value;\r\n    },\r\n  });\r\n  self.eventNames.forEach(function (eventName) {\r\n    Object.defineProperty(self.intf, 'on' + eventName, {\r\n      get: function () {\r\n        return self.componentL1Events[eventName];\r\n      },\r\n      set: function (value) {\r\n        self.events[eventName] = [];\r\n        self.componentL1Events[eventName] = value;\r\n        if (!value) {\r\n          return;\r\n        }\r\n        self.addEventListener(eventName, value);\r\n      },\r\n    });\r\n  });\r\n  Object.defineProperty(self.intf, 'frozenRow', {\r\n    get: function () {\r\n      return self.frozenRow;\r\n    },\r\n    set: function (val) {\r\n      if (isNaN(val)) {\r\n        throw new TypeError('Expected value for frozenRow to be a number.');\r\n      }\r\n      if (self.visibleRows.length < val) {\r\n        throw new RangeError(\r\n          'Cannot set a value larger than the number of visible rows.',\r\n        );\r\n      }\r\n      self.frozenRow = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'frozenColumn', {\r\n    get: function () {\r\n      return self.frozenColumn;\r\n    },\r\n    set: function (val) {\r\n      if (isNaN(val)) {\r\n        throw new TypeError('Expected value for frozenRow to be a number.');\r\n      }\r\n      if (self.getVisibleSchema().length < val) {\r\n        throw new RangeError(\r\n          'Cannot set a value larger than the number of visible columns.',\r\n        );\r\n      }\r\n      self.frozenColumn = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\r\n    get: function () {\r\n      return {\r\n        top: self.scrollIndexTop,\r\n        right: self.scrollIndexRight,\r\n        bottom: self.scrollIndexBottom,\r\n        left: self.scrollIndexLeft,\r\n      };\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\r\n    get: function () {\r\n      return {\r\n        top: self.scrollPixelTop,\r\n        right: self.scrollPixelRight,\r\n        bottom: self.scrollPixelBottom,\r\n        left: self.scrollPixelLeft,\r\n      };\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'rowOrder', {\r\n    get: function () {\r\n      return self.orders.rows;\r\n    },\r\n    set: function (val) {\r\n      if (!Array.isArray(val)) {\r\n        throw new TypeError('Value must be an array.');\r\n      }\r\n      if (!self.originalData || val.length < self.originalData.length) {\r\n        throw new RangeError(\r\n          'Array length must be equal to or greater than number of rows.',\r\n        );\r\n      }\r\n      self.orders.rows = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'columnOrder', {\r\n    get: function () {\r\n      return self.orders.columns;\r\n    },\r\n    set: function (val) {\r\n      if (!Array.isArray(val)) {\r\n        throw new TypeError('Value must be an array.');\r\n      }\r\n      if (val.length < self.getSchema().length) {\r\n        throw new RangeError(\r\n          'Array length must be equal to or greater than number of columns.',\r\n        );\r\n      }\r\n      self.orders.columns = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectionBounds', {\r\n    get: function () {\r\n      return self.getSelectionBounds();\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectedRows', {\r\n    get: function () {\r\n      return self.getSelectedData(true);\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectedCells', {\r\n    get: function () {\r\n      return self.getSelectedData();\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleSchema', {\r\n    get: function () {\r\n      return self.getVisibleSchema().map(function eachDataRow(col) {\r\n        return col;\r\n      });\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\r\n    get: function () {\r\n      return self.treeGridAttributes;\r\n    },\r\n    set: function setTreeGridAttributes(value) {\r\n      self.treeGridAttributes = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\r\n    get: function () {\r\n      return self.cellGridAttributes;\r\n    },\r\n    set: function setCellGridAttributes(value) {\r\n      self.cellGridAttributes = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'ctx', {\r\n    get: function () {\r\n      return self.ctx;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'schema', {\r\n    get: function schemaGetter() {\r\n      return self.getSchema();\r\n    },\r\n    set: function schemaSetter(value) {\r\n      if (value === undefined) {\r\n        // Issue #89 - allow schema to be set to initialized state\r\n        self.schema = undefined;\r\n        self.tempSchema = undefined;\r\n        self.dispatchEvent('schemachanged', { schema: undefined });\r\n        return;\r\n      }\r\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\r\n        throw new Error('Schema must be an array of objects.');\r\n      }\r\n      if (value[0].name === undefined) {\r\n        throw new Error(\r\n          'Expected schema to contain an object with at least a name property.',\r\n        );\r\n      }\r\n      self.schema = value.map(function eachSchemaColumn(column, index) {\r\n        column.width = column.width || self.style.cellWidth;\r\n        column.filter = column.filter || self.filter(column.type);\r\n        column.type = column.type || 'string';\r\n        column.index = index;\r\n        column.columnIndex = index;\r\n        column.rowIndex = -1;\r\n        return column;\r\n      });\r\n      self.tempSchema = undefined;\r\n      self.createNewRowData();\r\n      self.createColumnOrders();\r\n      self.tryLoadStoredSettings();\r\n      if (\r\n        self.storedSettings &&\r\n        typeof self.storedSettings.visibility === 'object'\r\n      ) {\r\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\r\n          if (\r\n            self.storedSettings &&\r\n            self.storedSettings.visibility[column.name] !== undefined\r\n          ) {\r\n            column.hidden = !self.storedSettings.visibility[column.name];\r\n          }\r\n        });\r\n      }\r\n      self.resize(true);\r\n      self.dispatchEvent('schemachanged', { schema: self.schema });\r\n    },\r\n  });\r\n  /**\r\n   * Gets an array of currently registered MIME types.\r\n   * @memberof canvasDatagrid\r\n   * @name getDataTypes\r\n   * @method\r\n   */\r\n  self.intf.getTypes = function () {\r\n    return Object.keys(self.parsers);\r\n  };\r\n  self.parseInnerHtml = function (data) {\r\n    if (!data || /^ +$/.test(data)) {\r\n      return [];\r\n    }\r\n    try {\r\n      data = JSON.parse(data);\r\n    } catch (e) {\r\n      console.warn(\r\n        Error(\r\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\r\n            e.message +\r\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\r\n            'Use the canvas-datagrid.data property to set object data.',\r\n        ),\r\n      );\r\n    }\r\n    return data;\r\n  };\r\n  self.parsers['application/json+x-canvas-datagrid'] = function (\r\n    data,\r\n    callback,\r\n  ) {\r\n    self.parsers['application/x-canvas-datagrid'](\r\n      self.parseInnerHtml(data),\r\n      function (data, schema) {\r\n        return callback(data, schema);\r\n      },\r\n    );\r\n  };\r\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\r\n    return callback(data);\r\n  };\r\n  self.intf.parsers = self.parsers;\r\n  // send to dataType ETL function to extract from input data\r\n  // and transform into native [{}, {}] format\r\n  self.etl = function (data, callback) {\r\n    if (!self.intf.parsers[self.dataType]) {\r\n      throw new Error('Unsupported data type.');\r\n    }\r\n    self.intf.parsers[self.dataType](data, function (data, schema) {\r\n      // set the unfiltered/sorted data array\r\n      self.originalData = data;\r\n      self.viewData = Array.from(self.originalData);\r\n\r\n      if (Array.isArray(schema)) {\r\n        self.schema = schema;\r\n      }\r\n      // Issue #89 - allow schema to be auto-created every time data is set\r\n      if (self.attributes.autoGenerateSchema) {\r\n        self.schema = self.getSchemaFromData(data);\r\n      }\r\n      if (!self.schema) {\r\n        self.tempSchema = self.getSchemaFromData(data);\r\n      }\r\n      if (self.getSchema()) {\r\n        self.createColumnOrders();\r\n      }\r\n      // apply filter, sort, etc to incoming dataset, set viewData:\r\n      self.refresh();\r\n      // empty data was set\r\n      if (!self.schema && (self.originalData || []).length === 0) {\r\n        self.tempSchema = [{ name: '' }];\r\n      }\r\n      self.fitColumnToValues('cornerCell', true);\r\n      if (\r\n        (self.tempSchema && !self.schema) ||\r\n        self.attributes.autoGenerateSchema\r\n      ) {\r\n        self.createColumnOrders();\r\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\r\n      }\r\n      callback();\r\n    });\r\n  };\r\n  Object.defineProperty(self.intf, 'viewData', {\r\n    get: function () {\r\n      return self.viewData;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'boundData', {\r\n    get: function () {\r\n      return self.originalData;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'data', {\r\n    get: function dataGetter() {\r\n      return self.originalData;\r\n    },\r\n    set: function dataSetter(value) {\r\n      self.etl(value, function () {\r\n        self.changes = [];\r\n        self.createNewRowData();\r\n        if (\r\n          self.attributes.autoResizeColumns &&\r\n          self.originalData.length > 0 &&\r\n          self.storedSettings === undefined\r\n        ) {\r\n          self.autosize();\r\n        }\r\n        // set the header column to fit the numbers in it\r\n        self.fitColumnToValues('cornerCell', true);\r\n        self.createRowOrders();\r\n        self.tryLoadStoredSettings();\r\n        self.dispatchEvent('datachanged', { data: self.originalData });\r\n        self.resize(true);\r\n      });\r\n    },\r\n  });\r\n  self.initScrollBox = function () {\r\n    var sHeight = 0,\r\n      sWidth = 0,\r\n      scrollTop = 0,\r\n      scrollLeft = 0,\r\n      scrollHeight = 0,\r\n      scrollWidth = 0,\r\n      scrollBoxHeight = 20,\r\n      scrollBoxWidth = 20;\r\n    function setScrollTop(value, preventScrollEvent) {\r\n      if (isNaN(value)) {\r\n        throw new Error('ScrollTop value must be a number');\r\n      }\r\n      if (value < 0) {\r\n        value = 0;\r\n      }\r\n      if (value > scrollHeight) {\r\n        value = scrollHeight;\r\n      }\r\n      if (scrollHeight < 0) {\r\n        value = 0;\r\n      }\r\n      scrollTop = value;\r\n      if (!preventScrollEvent) {\r\n        self.scroll();\r\n      }\r\n    }\r\n    function setScrollLeft(value, preventScrollEvent) {\r\n      if (isNaN(value)) {\r\n        throw new Error('ScrollLeft value must be a number');\r\n      }\r\n      if (value < 0) {\r\n        value = 0;\r\n      }\r\n      if (value > scrollWidth) {\r\n        value = scrollWidth;\r\n      }\r\n      if (scrollWidth < 0) {\r\n        value = 0;\r\n      }\r\n      scrollLeft = value;\r\n      if (!preventScrollEvent) {\r\n        self.scroll();\r\n      }\r\n    }\r\n    self.scrollBox.toString = function () {\r\n      return (\r\n        '{\"width\": ' +\r\n        scrollWidth.toFixed(2) +\r\n        ', \"height\": ' +\r\n        scrollHeight.toFixed(2) +\r\n        ', \"left\": ' +\r\n        scrollLeft.toFixed(2) +\r\n        ', \"top\": ' +\r\n        scrollTop.toFixed(2) +\r\n        ', \"widthRatio\": ' +\r\n        self.scrollBox.widthBoxRatio.toFixed(5) +\r\n        ', \"heightRatio\": ' +\r\n        self.scrollBox.heightBoxRatio.toFixed(5) +\r\n        '}'\r\n      );\r\n    };\r\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\r\n      setScrollLeft(x, true);\r\n      setScrollTop(y, supressDrawEvent);\r\n    };\r\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\r\n      get: function () {\r\n        return scrollBoxHeight;\r\n      },\r\n      set: function (value) {\r\n        scrollBoxHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\r\n      get: function () {\r\n        return scrollBoxWidth;\r\n      },\r\n      set: function (value) {\r\n        scrollBoxWidth = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'height', {\r\n      get: function () {\r\n        return sHeight;\r\n      },\r\n      set: function (value) {\r\n        sHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'width', {\r\n      get: function () {\r\n        return sWidth;\r\n      },\r\n      set: function (value) {\r\n        sWidth = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\r\n      get: function () {\r\n        return scrollTop;\r\n      },\r\n      set: setScrollTop,\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\r\n      get: function () {\r\n        return scrollLeft;\r\n      },\r\n      set: setScrollLeft,\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\r\n      get: function () {\r\n        return scrollHeight;\r\n      },\r\n      set: function (value) {\r\n        if (scrollTop > value) {\r\n          scrollTop = Math.max(value, 0);\r\n        }\r\n        scrollHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\r\n      get: function () {\r\n        return scrollWidth;\r\n      },\r\n      set: function (value) {\r\n        if (scrollLeft > value) {\r\n          scrollLeft = Math.max(value, 0);\r\n        }\r\n        scrollWidth = value;\r\n      },\r\n    });\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\r\n  function applyContextItemStyle(contextItemContainer) {\r\n    self.createInlineStyle(\r\n      contextItemContainer,\r\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\r\n    );\r\n    contextItemContainer.addEventListener('mouseover', function () {\r\n      self.createInlineStyle(\r\n        contextItemContainer,\r\n        'canvas-datagrid-context-menu-item:hover',\r\n      );\r\n    });\r\n    contextItemContainer.addEventListener('mouseout', function () {\r\n      self.createInlineStyle(\r\n        contextItemContainer,\r\n        'canvas-datagrid-context-menu-item',\r\n      );\r\n    });\r\n  }\r\n  function createContextMenu(ev, pos, items, parentContextMenu) {\r\n    var container = document.createElement('div'),\r\n      upArrow = document.createElement('div'),\r\n      downArrow = document.createElement('div'),\r\n      children = [],\r\n      selectedIndex = -1,\r\n      intf = {},\r\n      rect;\r\n    if (!Array.isArray(items)) {\r\n      throw new Error('createContextMenu expects an array.');\r\n    }\r\n    function createItems() {\r\n      items.forEach(function (item) {\r\n        var contextItemContainer = document.createElement('div'),\r\n          childMenuArrow;\r\n        function removeChildContext(e) {\r\n          if (\r\n            e.relatedTarget === container ||\r\n            item.contextMenu.container === e.relatedTarget ||\r\n            childMenuArrow === e.relatedTarget ||\r\n            contextItemContainer === e.relatedTarget ||\r\n            item.contextMenu.container.contains(e.relatedTarget)\r\n          ) {\r\n            return;\r\n          }\r\n          item.contextMenu.dispose();\r\n          children.splice(children.indexOf(item.contextMenu), 1);\r\n          item.contextMenu = undefined;\r\n          contextItemContainer.removeEventListener(\r\n            'mouseout',\r\n            removeChildContext,\r\n          );\r\n          container.removeEventListener('mouseout', removeChildContext);\r\n          contextItemContainer.setAttribute('contextOpen', '0');\r\n          contextItemContainer.setAttribute('opening', '0');\r\n        }\r\n        function contextAddCallback(items) {\r\n          // check yet again if the user hasn't moved off\r\n          if (\r\n            contextItemContainer.getAttribute('opening') !== '1' ||\r\n            contextItemContainer.getAttribute('contextOpen') === '1'\r\n          ) {\r\n            return;\r\n          }\r\n          var cPos = contextItemContainer.getBoundingClientRect();\r\n          cPos = {\r\n            left:\r\n              cPos.left +\r\n              self.style.childContextMenuMarginLeft +\r\n              container.offsetWidth,\r\n            top: cPos.top + self.style.childContextMenuMarginTop,\r\n            bottom: cPos.bottom,\r\n            right: cPos.right,\r\n          };\r\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\r\n          contextItemContainer.setAttribute('contextOpen', '1');\r\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\r\n          container.addEventListener('mouseout', removeChildContext);\r\n          children.push(item.contextMenu);\r\n        }\r\n        function createChildContext() {\r\n          var i;\r\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\r\n            return;\r\n          }\r\n          contextItemContainer.setAttribute('opening', '1');\r\n          if (typeof item.items === 'function') {\r\n            i = item.items.apply(intf, [\r\n              function (items) {\r\n                contextAddCallback(items);\r\n              },\r\n            ]);\r\n            if (i !== undefined && Array.isArray(i)) {\r\n              contextAddCallback(i);\r\n            }\r\n            return;\r\n          }\r\n          contextAddCallback(item.items);\r\n        }\r\n        function addItem(item) {\r\n          function addContent(content) {\r\n            if (content === null) {\r\n              return;\r\n            }\r\n            if (typeof content === 'function') {\r\n              return addContent(content(ev));\r\n            }\r\n            if (typeof content === 'object') {\r\n              contextItemContainer.appendChild(content);\r\n              return;\r\n            }\r\n            applyContextItemStyle(contextItemContainer);\r\n            contextItemContainer.innerHTML = content;\r\n            return;\r\n          }\r\n          addContent(item.title);\r\n          item.contextItemContainer = contextItemContainer;\r\n          if (\r\n            (item.items && item.items.length > 0) ||\r\n            typeof item.items === 'function'\r\n          ) {\r\n            childMenuArrow = document.createElement('div');\r\n            self.createInlineStyle(\r\n              childMenuArrow,\r\n              'canvas-datagrid-context-child-arrow',\r\n            );\r\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\r\n            contextItemContainer.appendChild(childMenuArrow);\r\n            contextItemContainer.addEventListener(\r\n              'mouseover',\r\n              createChildContext,\r\n            );\r\n            contextItemContainer.addEventListener('mouseout', function () {\r\n              contextItemContainer.setAttribute('opening', '0');\r\n            });\r\n          }\r\n          if (item.click) {\r\n            contextItemContainer.addEventListener('click', function (ev) {\r\n              item.click.apply(self, [ev]);\r\n            });\r\n          }\r\n        }\r\n        addItem(item);\r\n        container.appendChild(contextItemContainer);\r\n      });\r\n    }\r\n    function clickIndex(idx) {\r\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\r\n    }\r\n    function checkArrowVisibility() {\r\n      if (container.scrollTop > 0) {\r\n        self.parentDOMNode.appendChild(upArrow);\r\n      } else if (upArrow.parentNode) {\r\n        upArrow.parentNode.removeChild(upArrow);\r\n      }\r\n      if (\r\n        container.scrollTop >=\r\n          container.scrollHeight - container.offsetHeight &&\r\n        downArrow.parentNode\r\n      ) {\r\n        downArrow.parentNode.removeChild(downArrow);\r\n      } else if (\r\n        container.scrollHeight - container.offsetHeight > 0 &&\r\n        !(\r\n          container.scrollTop >=\r\n          container.scrollHeight - container.offsetHeight\r\n        )\r\n      ) {\r\n        self.parentDOMNode.appendChild(downArrow);\r\n      }\r\n    }\r\n    function startHoverScroll(type) {\r\n      return function t() {\r\n        var a = self.attributes.contextHoverScrollAmount;\r\n        if (type === 'up' && container.scrollTop === 0) {\r\n          return;\r\n        }\r\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\r\n          return;\r\n        }\r\n        container.scrollTop += type === 'up' ? -a : a;\r\n        hoverScrollTimeout = setTimeout(\r\n          t,\r\n          self.attributes.contextHoverScrollRateMs,\r\n          type,\r\n        );\r\n      };\r\n    }\r\n    function endHoverScroll(type) {\r\n      return function () {\r\n        clearTimeout(hoverScrollTimeout);\r\n      };\r\n    }\r\n    function init() {\r\n      var loc = {},\r\n        s = self.scrollOffset(self.canvas);\r\n      if (zIndexTop === undefined) {\r\n        zIndexTop = self.style.contextMenuZIndex;\r\n      }\r\n      createItems();\r\n      self.createInlineStyle(\r\n        container,\r\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\r\n      );\r\n      loc.x = pos.left - s.left;\r\n      loc.y = pos.top - s.top;\r\n      loc.height = 0;\r\n      zIndexTop += 1;\r\n      container.style.position = 'absolute';\r\n      upArrow.style.color = self.style.contextMenuArrowColor;\r\n      downArrow.style.color = self.style.contextMenuArrowColor;\r\n      [upArrow, downArrow].forEach(function (el) {\r\n        el.style.textAlign = 'center';\r\n        el.style.position = 'absolute';\r\n        el.style.zIndex = zIndexTop + 1;\r\n      });\r\n      container.style.zIndex = zIndexTop;\r\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\r\n        container.style.maxHeight =\r\n          window.innerHeight -\r\n          loc.y -\r\n          self.style.autocompleteBottomMargin +\r\n          'px';\r\n        container.style.minWidth = pos.width + 'px';\r\n        loc.y += pos.height;\r\n      }\r\n      if (self.mobile) {\r\n        container.style.width = pos.width + 'px';\r\n      }\r\n      container.style.left = loc.x + 'px';\r\n      container.style.top = loc.y + 'px';\r\n      container.addEventListener('scroll', checkArrowVisibility);\r\n      container.addEventListener('wheel', function (e) {\r\n        if (self.hasFocus) {\r\n          container.scrollTop += e.deltaY;\r\n          container.scrollLeft += e.deltaX;\r\n        }\r\n        checkArrowVisibility();\r\n      });\r\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\r\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\r\n      container.appendChild(upArrow);\r\n      document.body.appendChild(downArrow);\r\n      document.body.appendChild(container);\r\n      rect = container.getBoundingClientRect();\r\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\r\n      if (rect.bottom > window.innerHeight) {\r\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\r\n          loc.y -=\r\n            rect.bottom +\r\n            self.style.contextMenuWindowMargin -\r\n            window.innerHeight;\r\n        }\r\n        if (loc.y < 0) {\r\n          loc.y = self.style.contextMenuWindowMargin;\r\n        }\r\n        if (\r\n          container.offsetHeight >\r\n          window.innerHeight - self.style.contextMenuWindowMargin\r\n        ) {\r\n          container.style.height =\r\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\r\n        }\r\n      }\r\n      if (rect.right > window.innerWidth) {\r\n        loc.x -=\r\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\r\n      }\r\n      if (loc.x < 0) {\r\n        loc.x = self.style.contextMenuWindowMargin;\r\n      }\r\n      if (loc.y < 0) {\r\n        loc.y = self.style.contextMenuWindowMargin;\r\n      }\r\n      container.style.left = loc.x + 'px';\r\n      container.style.top = loc.y + 'px';\r\n      rect = container.getBoundingClientRect();\r\n      upArrow.style.top = rect.top + 'px';\r\n      downArrow.style.top =\r\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\r\n      upArrow.style.left = rect.left + 'px';\r\n      downArrow.style.left = rect.left + 'px';\r\n      downArrow.style.width = container.offsetWidth + 'px';\r\n      upArrow.style.width = container.offsetWidth + 'px';\r\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\r\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\r\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\r\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\r\n      checkArrowVisibility();\r\n    }\r\n    intf.parentGrid = self.intf;\r\n    intf.parentContextMenu = parentContextMenu;\r\n    intf.container = container;\r\n    init();\r\n    intf.clickIndex = clickIndex;\r\n    intf.rect = rect;\r\n    intf.items = items;\r\n    intf.upArrow = upArrow;\r\n    intf.downArrow = downArrow;\r\n    intf.dispose = function () {\r\n      clearTimeout(hoverScrollTimeout);\r\n      children.forEach(function (c) {\r\n        c.dispose();\r\n      });\r\n      [downArrow, upArrow, container].forEach(function (el) {\r\n        if (el.parentNode) {\r\n          el.parentNode.removeChild(el);\r\n        }\r\n      });\r\n    };\r\n    Object.defineProperty(intf, 'selectedIndex', {\r\n      get: function () {\r\n        return selectedIndex;\r\n      },\r\n      set: function (value) {\r\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\r\n          throw new Error('Context menu selected index must be a sane number.');\r\n        }\r\n        selectedIndex = value;\r\n        if (selectedIndex > items.length - 1) {\r\n          selectedIndex = items.length - 1;\r\n        }\r\n        if (selectedIndex < 0) {\r\n          selectedIndex = 0;\r\n        }\r\n        items.forEach(function (item, index) {\r\n          if (index === selectedIndex) {\r\n            return self.createInlineStyle(\r\n              item.contextItemContainer,\r\n              'canvas-datagrid-context-menu-item:hover',\r\n            );\r\n          }\r\n          self.createInlineStyle(\r\n            item.contextItemContainer,\r\n            'canvas-datagrid-context-menu-item',\r\n          );\r\n        });\r\n      },\r\n    });\r\n    return intf;\r\n  }\r\n  function createFilterContextMenuItems(e) {\r\n    var filterContainer = document.createElement('div'),\r\n      filterLabel = document.createElement('div'),\r\n      filterAutoCompleteButton = document.createElement('button'),\r\n      filterInput = document.createElement('input'),\r\n      n =\r\n        e.cell && e.cell.header\r\n          ? e.cell.header.title || e.cell.header.name\r\n          : '',\r\n      iRect;\r\n    function checkRegExpErrorState() {\r\n      filterInput.style.background = self.style.contextFilterInputBackground;\r\n      filterInput.style.color = self.style.contextFilterInputColor;\r\n      if (self.invalidFilterRegEx) {\r\n        filterInput.style.background =\r\n          self.style.contextFilterInvalidRegExpBackground;\r\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\r\n      }\r\n    }\r\n    function fillAutoComplete() {\r\n      var count = 0;\r\n      var items = {};\r\n      var blanksItem = [];\r\n\r\n      self.viewData.forEach(function (row) {\r\n        var cellValue =\r\n          row[e.cell.header.name] == null\r\n            ? row[e.cell.header.name]\r\n            : String(row[e.cell.header.name]).trim();\r\n        var value = self.blankValues.includes(cellValue)\r\n          ? self.attributes.blanksText\r\n          : cellValue;\r\n\r\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\r\n          return;\r\n        }\r\n        count += 1;\r\n        items[value] = {\r\n          title: self.formatters[e.cell.header.type || 'string']({\r\n            cell: { value: value },\r\n          }),\r\n          click: function (e) {\r\n            filterInput.value = value;\r\n            e.stopPropagation();\r\n            filterInput.dispatchEvent(new Event('keyup'));\r\n            self.disposeAutocomplete();\r\n            return;\r\n          },\r\n        };\r\n      });\r\n\r\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\r\n        blanksItem.push(items[self.attributes.blanksText]);\r\n        delete items[self.attributes.blanksText];\r\n      }\r\n\r\n      return blanksItem.concat(\r\n        Object.keys(items).map(function (key) {\r\n          return items[key];\r\n        }),\r\n      );\r\n    }\r\n\r\n    function createAutoCompleteContext(ev) {\r\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\r\n        return;\r\n      }\r\n\r\n      var autoCompleteItems = fillAutoComplete();\r\n\r\n      iRect = filterInput.getBoundingClientRect();\r\n      if (autoCompleteContext) {\r\n        autoCompleteContext.dispose();\r\n        autoCompleteContext = undefined;\r\n      }\r\n      autoCompleteContext = createContextMenu(\r\n        e,\r\n        {\r\n          left: iRect.left,\r\n          top: iRect.top,\r\n          right: iRect.right,\r\n          bottom: iRect.bottom,\r\n          height: iRect.height,\r\n          width: iRect.width,\r\n        },\r\n        autoCompleteItems,\r\n        { inputDropdown: true },\r\n      );\r\n      autoCompleteContext.selectedIndex = 0;\r\n    }\r\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\r\n    self.createInlineStyle(\r\n      filterAutoCompleteButton,\r\n      'canvas-datagrid-context-menu-filter-button',\r\n    );\r\n    self.createInlineStyle(\r\n      filterInput,\r\n      'canvas-datagrid-context-menu-filter-input',\r\n    );\r\n    checkRegExpErrorState();\r\n    filterInput.onclick = self.disposeAutocomplete;\r\n    filterInput.addEventListener('keydown', function (e) {\r\n      if (e.key === 'ArrowDown') {\r\n        autoCompleteContext.selectedIndex += 1;\r\n      }\r\n\r\n      if (e.key === 'ArrowUp') {\r\n        autoCompleteContext.selectedIndex -= 1;\r\n      }\r\n\r\n      if (e.key === 'Enter') {\r\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\r\n        self.disposeContextMenu();\r\n      }\r\n\r\n      if (e.key === 'Tab') {\r\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\r\n        e.preventDefault();\r\n      }\r\n\r\n      if (e.key === 'Escape') {\r\n        self.disposeContextMenu();\r\n      }\r\n    });\r\n    filterInput.addEventListener('keyup', function () {\r\n      self.setFilter(e.cell.header.name, filterInput.value);\r\n    });\r\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\r\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\r\n      filterInput.addEventListener(en, checkRegExpErrorState);\r\n    });\r\n    filterInput.value = e.cell.header\r\n      ? self.columnFilters[e.cell.header.name] || ''\r\n      : '';\r\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\r\n    filterAutoCompleteButton.onclick = function () {\r\n      if (autoCompleteContext) {\r\n        return self.disposeAutocomplete();\r\n      }\r\n      createAutoCompleteContext();\r\n    };\r\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\r\n    filterContainer.addEventListener('click', function (e) {\r\n      return e.stopPropagation();\r\n    });\r\n    filterContainer.appendChild(filterLabel);\r\n    filterContainer.appendChild(filterInput);\r\n    filterContainer.appendChild(filterAutoCompleteButton);\r\n    e.items.push({\r\n      title: filterContainer,\r\n    });\r\n    if (Object.keys(self.columnFilters).length) {\r\n      Object.keys(self.columnFilters).forEach(function (cf) {\r\n        var h = self.getHeaderByName(cf);\r\n        e.items.push({\r\n          title: self.attributes.removeFilterOptionText.replace(\r\n            /%s/g,\r\n            h.title || h.name,\r\n          ),\r\n          click: function removeFilterClick(e) {\r\n            e.preventDefault();\r\n            self.setFilter(cf, '');\r\n            self.controlInput.focus();\r\n          },\r\n        });\r\n      });\r\n    }\r\n  }\r\n  function addDefaultContextMenuItem(e) {\r\n    var isNormalCell =\r\n      !(\r\n        e.cell.isBackground ||\r\n        e.cell.isColumnHeaderCellCap ||\r\n        e.cell.isScrollBar ||\r\n        e.cell.isCorner ||\r\n        e.cell.isRowHeader\r\n      ) && e.cell.header;\r\n    if (self.attributes.showFilter && isNormalCell) {\r\n      createFilterContextMenuItems(e);\r\n    }\r\n    if (\r\n      self.attributes.showCopy &&\r\n      self.selections.reduce(function (p, r) {\r\n        return p + r.length;\r\n      }, 0) > 0\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.copyText,\r\n        click: function () {\r\n          document.execCommand('copy');\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n    if (self.attributes.showPaste && self.clipBoardData) {\r\n      e.items.push({\r\n        title: self.attributes.pasteText,\r\n        click: function () {\r\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\r\n          self.draw();\r\n        },\r\n      });\r\n    }\r\n    if (self.attributes.showColumnSelector) {\r\n      e.items.push({\r\n        title: self.attributes.columnSelectorText,\r\n        items: function () {\r\n          var d = [];\r\n          self.getSchema().forEach(function (column) {\r\n            function toggleColumnVisibility(e) {\r\n              column.hidden = !column.hidden;\r\n              self.dispatchEvent('togglecolumn', {\r\n                column: column,\r\n                hidden: column.hidden,\r\n              });\r\n              e.preventDefault();\r\n              self.stopPropagation(e);\r\n              self.disposeContextMenu();\r\n              self.resize(true);\r\n              self.setStorageData();\r\n            }\r\n            var el = document.createElement('div');\r\n            applyContextItemStyle(el);\r\n            el.addEventListener('touchstart', toggleColumnVisibility);\r\n            el.addEventListener('click', toggleColumnVisibility);\r\n            el.innerHTML =\r\n              (column.hidden\r\n                ? self.attributes.columnSelectorHiddenText\r\n                : self.attributes.columnSelectorVisibleText) +\r\n              (column.title || column.name);\r\n            d.push({\r\n              title: el,\r\n            });\r\n          });\r\n          return d;\r\n        },\r\n      });\r\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\r\n        e.items.push({\r\n          title: self.attributes.hideColumnText.replace(\r\n            /%s/gi,\r\n            e.cell.header.title || e.cell.header.name,\r\n          ),\r\n          click: function (ev) {\r\n            self.getSchema()[e.cell.columnIndex].hidden = true;\r\n            ev.preventDefault();\r\n            self.stopPropagation(ev);\r\n            self.disposeContextMenu();\r\n            self.setStorageData();\r\n            setTimeout(function () {\r\n              self.resize(true);\r\n            }, 10);\r\n          },\r\n        });\r\n      }\r\n    }\r\n    if (\r\n      self.attributes.saveAppearance &&\r\n      self.attributes.showClearSettingsOption &&\r\n      (Object.keys(self.sizes.rows).length > 0 ||\r\n        Object.keys(self.sizes.columns).length > 0)\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.clearSettingsOptionText,\r\n        click: function (e) {\r\n          e.preventDefault();\r\n          self.sizes.rows = {};\r\n          self.sizes.columns = {};\r\n          self.createRowOrders();\r\n          self.createColumnOrders();\r\n          self.storedSettings = undefined;\r\n          self.dispatchEvent('resizecolumn', {\r\n            columnWidth: self.style.cellWidth,\r\n          });\r\n          self.dispatchEvent('resizerow', {\r\n            cellHeight: self.style.cellHeight,\r\n          });\r\n          self.setStorageData();\r\n          self.resize(true);\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      self.attributes.allowSorting &&\r\n      self.attributes.showOrderByOption &&\r\n      isNormalCell\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.showOrderByOptionTextAsc.replace(\r\n          '%s',\r\n          e.cell.header.title || e.cell.header.name,\r\n        ),\r\n        click: function (ev) {\r\n          ev.preventDefault();\r\n          self.order(e.cell.header.name, 'asc');\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n      e.items.push({\r\n        title: self.attributes.showOrderByOptionTextDesc.replace(\r\n          '%s',\r\n          e.cell.header.title || e.cell.header.name,\r\n        ),\r\n        click: function (ev) {\r\n          ev.preventDefault();\r\n          self.order(e.cell.header.name, 'desc');\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n  }\r\n  self.disposeAutocomplete = function () {\r\n    if (autoCompleteContext) {\r\n      autoCompleteContext.dispose();\r\n      autoCompleteContext = undefined;\r\n    }\r\n  };\r\n  self.disposeContextMenu = function () {\r\n    document.removeEventListener('click', self.disposeContextMenu);\r\n    zIndexTop = self.style.contextMenuZIndex;\r\n    self.disposeAutocomplete();\r\n    if (self.contextMenu) {\r\n      self.contextMenu.dispose();\r\n    }\r\n    self.contextMenu = undefined;\r\n  };\r\n  self.contextmenuEvent = function (e, overridePos) {\r\n    if (!self.hasFocus && e.target !== self.canvas) {\r\n      return;\r\n    }\r\n    function createDiposeEvent() {\r\n      requestAnimationFrame(function () {\r\n        document.addEventListener('click', self.disposeContextMenu);\r\n        document.removeEventListener('mouseup', createDiposeEvent);\r\n      });\r\n    }\r\n    var contextPosition,\r\n      items = [],\r\n      pos = overridePos || self.getLayerPos(e),\r\n      ev = {\r\n        NativeEvent: e,\r\n        cell: self.getCellAt(pos.x, pos.y),\r\n        items: items,\r\n      };\r\n    if (!ev.cell.isGrid) {\r\n      addDefaultContextMenuItem(ev);\r\n    }\r\n    if (self.dispatchEvent('contextmenu', ev)) {\r\n      return;\r\n    }\r\n    if (!ev.cell.isGrid) {\r\n      if (self.contextMenu) {\r\n        self.disposeContextMenu();\r\n      }\r\n      contextPosition = {\r\n        left:\r\n          pos.x +\r\n          pos.rect.left +\r\n          self.style.contextMenuMarginLeft +\r\n          self.canvasOffsetLeft,\r\n        top:\r\n          pos.y +\r\n          pos.rect.top +\r\n          self.style.contextMenuMarginTop +\r\n          self.canvasOffsetTop,\r\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\r\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\r\n        height: ev.cell.height,\r\n        width: ev.cell.width,\r\n      };\r\n      if (self.mobile) {\r\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\r\n        contextPosition.width =\r\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\r\n      }\r\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\r\n      document.addEventListener('mouseup', createDiposeEvent);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    var ev = {\n      cell: cell,\n      newValue: self.input.value,\n      oldValue: cell.value,\n      abort: abortEdit,\n      input: self.input,\n    };\n    if (self.dispatchEvent('beforeendedit', ev)) {\n      return false;\n    }\n    if (ev.objValue != undefined && typeof ev.objValue === 'object' && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = ev.objValue;\n      if (!cell.data) {\n        self.originalData[cell.boundRowIndex] = {};\n        cell.data = self.originalData[cell.boundRowIndex];\n      }\n      cell.data[cell.header.name] = ev.objValue;\n      if (y === self.viewData.length) {\n        var ev2 = {\n          value: self.input.value,\n          defaultValue: cell.value,\n          aborted: abort,\n          cell: cell,\n          input: self.input,\n          objValue: ev.objValue,\n        };\n        if (self.dispatchEvent('newrow', ev2)) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    } else {\n      if (self.input.value !== cell.value && !abort) {\n        self.changes[y] = self.changes[y] || {};\n        self.changes[y][cell.header.name] = self.input.value;\n        if (!cell.data) {\n          self.originalData[cell.boundRowIndex] = {};\n          cell.data = self.originalData[cell.boundRowIndex];\n        }\n        cell.data[cell.header.name] = self.input.value;\n        if (y === self.viewData.length) {\n          if (\n            self.dispatchEvent('newrow', {\n              value: self.input.value,\n              defaultValue: cell.value,\n              aborted: abort,\n              cell: cell,\n              input: self.input,\n            })\n          ) {\n            return false;\n          }\n          self.addRow(cell.data);\n          self.createNewRowData();\n        }\n        self.draw(true);\n      }\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    if (typeof cell.value === 'object') {\n      var ev = {\n        value: cell.value,\n        row: { endCap: '' },\n        header: cell.header,\n        cell: cell,\n        event: 'beginedit',\n      };\n      var f = self.formatters[cell.header.type || 'string'];\n      if (f) {\n        self.input.value = shouldClearCellValue ? '' : f(ev);\n      }\n    } else {\n      self.input.value = shouldClearCellValue ? '' : cell.value;\n    }\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.viewData.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.viewData.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.viewData.length - 1;\n        }\n        if (ny > self.viewData.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  /**\r\n   * Converts a integer into a letter A - ZZZZZ...\r\n   * @memberof canvasDatagrid\r\n   * @name integerToAlpha\r\n   * @method\r\n   * @param {column} n The number to convert.\r\n   */\r\n  self.integerToAlpha = function (n) {\r\n    var ordA = 'a'.charCodeAt(0),\r\n      ordZ = 'z'.charCodeAt(0),\r\n      len = ordZ - ordA + 1,\r\n      s = '';\r\n    while (n >= 0) {\r\n      s = String.fromCharCode((n % len) + ordA) + s;\r\n      n = Math.floor(n / len) - 1;\r\n    }\r\n    return s;\r\n  };\r\n  /**\r\n   * Inserts a new column before the specified index into the schema.\r\n   * @tutorial schema\r\n   * @memberof canvasDatagrid\r\n   * @name insertColumn\r\n   * @method\r\n   * @param {column} c The column to insert into the schema.\r\n   * @param {number} index The index of the column to insert before.\r\n   */\r\n  self.insertColumn = function (c, index) {\r\n    var s = self.getSchema();\r\n    if (s.length < index) {\r\n      throw new Error('Index is beyond the length of the schema.');\r\n    }\r\n    self.validateColumn(c, s);\r\n    s.splice(index, 0, c);\r\n\r\n    self.originalData.forEach(function (row, rowIndex) {\r\n      self.applyDefaultValue(row, c, rowIndex);\r\n    });\r\n    self.intf.schema = s;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Deletes a column from the schema at the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name deleteColumn\r\n   * @tutorial schema\r\n   * @method\r\n   * @param {number} index The index of the column to delete.\r\n   */\r\n  self.deleteColumn = function (index) {\r\n    var schema = self.getSchema();\r\n\r\n    // remove data matching this column name from data\r\n    self.originalData.forEach(function (row) {\r\n      delete row[schema[index].name];\r\n    });\r\n\r\n    schema.splice(index, 1);\r\n    self.intf.schema = schema;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Adds a new column into the schema.\r\n   * @tutorial schema\r\n   * @memberof canvasDatagrid\r\n   * @name addColumn\r\n   * @method\r\n   * @param {column} c The column to add to the schema.\r\n   */\r\n  self.addColumn = function (c) {\r\n    var s = self.getSchema();\r\n    self.validateColumn(c, s);\r\n    s.push(c);\r\n    self.originalData.forEach(function (row, rowIndex) {\r\n      self.applyDefaultValue(row, c, rowIndex);\r\n    });\r\n    self.intf.schema = s;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Deletes a row from the dataset at the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name deleteRow\r\n   * @method\r\n   * @param {number} index The index of the row to delete.\r\n   */\r\n  self.deleteRow = function (index) {\r\n    self.originalData.splice(index, 1);\r\n    self.setFilter();\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Inserts a new row into the dataset before the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name insertRow\r\n   * @method\r\n   * @param {object} d data.\r\n   * @param {number} index The index of the row to insert before.\r\n   */\r\n  self.insertRow = function (d, index) {\r\n    if (self.originalData.length < index) {\r\n      throw new Error('Index is beyond the length of the dataset.');\r\n    }\r\n    self.originalData.splice(index, 0, d);\r\n    self.getSchema().forEach(function (c) {\r\n      if (d[c.name] === undefined) {\r\n        self.applyDefaultValue(self.originalData[index], c, index);\r\n      }\r\n    });\r\n\r\n    // setFilter calls .refresh(), so we need not call it again:\r\n    self.setFilter();\r\n\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Adds a new row into the dataset.\r\n   * @memberof canvasDatagrid\r\n   * @name addRow\r\n   * @method\r\n   * @param {object} d data.\r\n   */\r\n  self.addRow = function (d) {\r\n    self.originalData.push(d);\r\n    self.getSchema().forEach(function (c) {\r\n      if (d[c.name] === undefined) {\r\n        self.applyDefaultValue(\r\n          self.originalData[self.originalData.length - 1],\r\n          c,\r\n          self.originalData.length - 1,\r\n        );\r\n      }\r\n    });\r\n\r\n    // setFilter calls .refresh(), so we need not call it again:\r\n    self.setFilter();\r\n\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Sets the height of a given row by index number.\r\n   * @memberof canvasDatagrid\r\n   * @name setRowHeight\r\n   * @method\r\n   * @param {number} rowIndex The index of the row to set.\r\n   * @param {number} height Height to set the row to.\r\n   */\r\n  self.setRowHeight = function (rowIndex, height) {\r\n    self.sizes.rows[rowIndex] = height;\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Sets the width of a given column by index number.\r\n   * @memberof canvasDatagrid\r\n   * @name setColumnWidth\r\n   * @method\r\n   * @param {number} colIndex The index of the column to set.\r\n   * @param {number} width Width to set the column to.\r\n   */\r\n  self.setColumnWidth = function (colIndex, width) {\r\n    self.sizes.columns[colIndex] = width;\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\r\n   * @memberof canvasDatagrid\r\n   * @name resetColumnWidths\r\n   * @tutorial schema\r\n   * @method\r\n   */\r\n  self.resetColumnWidths = function () {\r\n    self.sizes.columns = {};\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\r\n   * @memberof canvasDatagrid\r\n   * @name resetRowHeights\r\n   * @tutorial schema\r\n   * @method\r\n   */\r\n  self.resetRowHeights = function () {\r\n    self.sizes.rows = {};\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Sets the value of the filter.\r\n   * @memberof canvasDatagrid\r\n   * @name setFilter\r\n   * @method\r\n   * @param {string} column Name of the column to filter.\r\n   * @param {string} value The value to filter for.\r\n   */\r\n  self.setFilter = function (column, value) {\r\n    if (column === undefined && value === undefined) {\r\n      self.columnFilters = {};\r\n    } else if (column && (value === '' || value === undefined)) {\r\n      delete self.columnFilters[column];\r\n    } else {\r\n      self.columnFilters[column] = value;\r\n    }\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name findRowScrollTop\r\n   * @method\r\n   * @param {number} rowIndex The row index of the row to scroll find.\r\n   */\r\n  self.findRowScrollTop = function (rowIndex) {\r\n    if (self.scrollCache.y[rowIndex] === undefined) {\r\n      throw new RangeError(\r\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\r\n      );\r\n    }\r\n    return self.scrollCache.y[rowIndex];\r\n  };\r\n  /**\r\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name findColumnScrollLeft\r\n   * @method\r\n   * @param {number} columnIndex The column index of the column to find.\r\n   */\r\n  self.findColumnScrollLeft = function (columnIndex) {\r\n    var i = Math.max(columnIndex - 1, 0);\r\n    if (self.scrollCache.x[i] === undefined) {\r\n      throw new Error('Column index out of range.');\r\n    }\r\n    return (\r\n      self.scrollCache.x[i] -\r\n      self.getColumnWidth(self.orders.columns[columnIndex])\r\n    );\r\n  };\r\n  /**\r\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\r\n   * @memberof canvasDatagrid\r\n   * @name gotoCell\r\n   * @method\r\n   * @param {number} x The column index of the cell to scroll to.\r\n   * @param {number} y The row index of the cell to scroll to.\r\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\r\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\r\n   */\r\n  self.gotoCell = function (x, y, offsetX, offsetY) {\r\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\r\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\r\n      cell,\r\n      sbw =\r\n        self.scrollBox.width -\r\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\r\n      sbh =\r\n        self.scrollBox.height -\r\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\r\n    offsetX = offsetX === undefined ? 0 : offsetX;\r\n    offsetY = offsetY === undefined ? 0 : offsetY;\r\n    targetX -= sbw * offsetX;\r\n    targetY -= sbh * offsetY;\r\n    if (x !== undefined && y !== undefined) {\r\n      self.scrollBox.scrollTo(targetX, targetY);\r\n      requestAnimationFrame(function () {\r\n        cell = self.getVisibleCellByIndex(x, y);\r\n        // HACK: just don't offset if the target cell cannot be seen\r\n        // TODO: offset does not work on very small grids, not sure why\r\n        if (!cell) {\r\n          return;\r\n        }\r\n        targetX += cell.width * offsetX;\r\n        targetY += cell.height * offsetY;\r\n        self.scrollBox.scrollTo(targetX, targetY);\r\n      });\r\n    } else if (x !== undefined) {\r\n      self.scrollBox.scrollLeft = targetX;\r\n    } else if (y !== undefined) {\r\n      self.scrollBox.scrollTop = targetY;\r\n    }\r\n  };\r\n  /**\r\n   * Scrolls the row y.\r\n   * @memberof canvasDatagrid\r\n   * @name gotoRow\r\n   * @method\r\n   * @param {number} y The row index of the cell to scroll to.\r\n   */\r\n  self.gotoRow = function (y) {\r\n    self.gotoCell(0, y);\r\n  };\r\n  /**\r\n   * Scrolls the cell at cell x, row y into view if it is not already.\r\n   * @memberof canvasDatagrid\r\n   * @name scrollIntoView\r\n   * @method\r\n   * @param {number} x The column index of the cell to scroll into view.\r\n   * @param {number} y The row index of the cell to scroll into view.\r\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\r\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\r\n   */\r\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\r\n    if (\r\n      self.visibleCells.filter(function (cell) {\r\n        return (\r\n          (cell.rowIndex === y || y === undefined) &&\r\n          (cell.columnIndex === x || x === undefined) &&\r\n          cell.x > 0 &&\r\n          cell.y > 0 &&\r\n          cell.x + cell.width < self.width &&\r\n          cell.y + cell.height < self.height\r\n        );\r\n      }).length === 0\r\n    ) {\r\n      self.gotoCell(x, y, offsetX, offsetY);\r\n    }\r\n  };\r\n  /**\r\n   * Sets the active cell. Requires redrawing.\r\n   * @memberof canvasDatagrid\r\n   * @name setActiveCell\r\n   * @method\r\n   * @param {number} x The column index of the cell to set active.\r\n   * @param {number} y The row index of the cell to set active.\r\n   */\r\n  self.setActiveCell = function (x, y) {\r\n    if (x < 0) {\r\n      x = 0;\r\n    }\r\n    if (y < 0) {\r\n      y = 0;\r\n    }\r\n    self.activeCell = {\r\n      rowIndex: y,\r\n      columnIndex: x,\r\n    };\r\n  };\r\n  /**\r\n   * Removes the selection.\r\n   * @memberof canvasDatagrid\r\n   * @name selectNone\r\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\r\n   * @method\r\n   */\r\n  self.selectNone = function (dontDraw) {\r\n    self.selections = [];\r\n    self.dispatchEvent('selectionchanged', {\r\n      selectedData: self.getSelectedData(),\r\n      selections: self.selections,\r\n      selectionBounds: self.selectionBounds,\r\n    });\r\n    if (dontDraw) {\r\n      return;\r\n    }\r\n    self.draw();\r\n  };\r\n  /**\r\n   * Selects every visible cell.\r\n   * @memberof canvasDatagrid\r\n   * @name selectAll\r\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\r\n   * @method\r\n   */\r\n  self.selectAll = function (dontDraw) {\r\n    self.selectArea({\r\n      top: 0,\r\n      left: -1,\r\n      right: self.getSchema().length - 1,\r\n      bottom: self.viewData.length - 1,\r\n    });\r\n    if (dontDraw) {\r\n      return;\r\n    }\r\n    self.draw();\r\n  };\r\n  /**\r\n   * Returns true if the selected columnIndex is selected on every row.\r\n   * @memberof canvasDatagrid\r\n   * @name isColumnSelected\r\n   * @method\r\n   * @param {number} columnIndex The column index to check.\r\n   */\r\n  self.isColumnSelected = function (columnIndex) {\r\n    var colIsSelected = true;\r\n    self.viewData.forEach(function (row, rowIndex) {\r\n      if (\r\n        !self.selections[rowIndex] ||\r\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\r\n          -1\r\n      ) {\r\n        colIsSelected = false;\r\n      }\r\n    });\r\n    return colIsSelected;\r\n  };\r\n  /**\r\n   * Runs the defined method on each selected cell.\r\n   * @memberof canvasDatagrid\r\n   * @name forEachSelectedCell\r\n   * @method\r\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\r\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\r\n   */\r\n  self.forEachSelectedCell = function (fn, expandToRow) {\r\n    var d = [],\r\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\r\n      l = self.viewData.length;\r\n    self.selections.forEach(function (row, index) {\r\n      if (index === l) {\r\n        return;\r\n      }\r\n      if (row.length === 0) {\r\n        d[index] = null;\r\n        return;\r\n      }\r\n      d[index] = {};\r\n      row.forEach(function (col) {\r\n        if (col === -1 || !s[col]) {\r\n          return;\r\n        }\r\n        fn(self.viewData, index, s[col].name);\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * Selects a column.\r\n   * @memberof canvasDatagrid\r\n   * @name selectColumn\r\n   * @method\r\n   * @param {number} columnIndex The column index to select.\r\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\r\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\r\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\r\n   */\r\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\r\n    var s, e, x;\r\n    function addCol(i) {\r\n      self.viewData.forEach(function (row, rowIndex) {\r\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\r\n        if (self.selections[rowIndex].indexOf(i) === -1) {\r\n          self.selections[rowIndex].push(i);\r\n        }\r\n      });\r\n    }\r\n    function removeCol(i) {\r\n      self.viewData.forEach(function (row, rowIndex) {\r\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\r\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\r\n          self.selections[rowIndex].splice(\r\n            self.selections[rowIndex].indexOf(i),\r\n            1,\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (shift) {\r\n      if (!self.activeCell) {\r\n        return;\r\n      }\r\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\r\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\r\n      for (x = s; e > x; x += 1) {\r\n        addCol(x);\r\n      }\r\n    }\r\n    if (!ctrl && !shift) {\r\n      self.selections = [];\r\n      self.activeCell.columnIndex = columnIndex;\r\n      self.activeCell.rowIndex = self.scrollIndexTop;\r\n    }\r\n    if (ctrl && self.isColumnSelected(columnIndex)) {\r\n      removeCol(columnIndex);\r\n    } else {\r\n      addCol(columnIndex);\r\n    }\r\n    if (supressEvent) {\r\n      return;\r\n    }\r\n    self.dispatchEvent('selectionchanged', {\r\n      selectedData: self.getSelectedData(),\r\n      selections: self.selections,\r\n      selectionBounds: self.getSelectionBounds(),\r\n    });\r\n  };\r\n  /**\r\n   * Selects a row.\r\n   * @memberof canvasDatagrid\r\n   * @name selectRow\r\n   * @method\r\n   * @param {number} rowIndex The row index to select.\r\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\r\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\r\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\r\n   */\r\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\r\n    var x,\r\n      st,\r\n      en,\r\n      s = self.getVisibleSchema();\r\n    function de() {\r\n      if (supressEvent) {\r\n        return;\r\n      }\r\n      self.dispatchEvent('selectionchanged', {\r\n        selectedData: self.getSelectedData(),\r\n        selections: self.selections,\r\n        selectionBounds: self.selectionBounds,\r\n      });\r\n    }\r\n    function addRow(ri) {\r\n      self.selections[ri] = [];\r\n      self.selections[ri].push(-1);\r\n      s.forEach(function (col, index) {\r\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\r\n      });\r\n    }\r\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\r\n      if (\r\n        self.selections[rowIndex] &&\r\n        self.selections[rowIndex].length - 1 === s.length\r\n      ) {\r\n        if (ctrl) {\r\n          self.selections[rowIndex] = [];\r\n          de();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\r\n      if (shift && self.dragObject === undefined) {\r\n        if (!self.activeCell) {\r\n          return;\r\n        }\r\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\r\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\r\n        for (x = st; en >= x; x += 1) {\r\n          addRow(x);\r\n        }\r\n      } else {\r\n        addRow(rowIndex);\r\n      }\r\n    }\r\n    de();\r\n  };\r\n  /**\r\n   * Collapse a tree grid by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name collapseTree\r\n   * @method\r\n   * @param {number} index The index of the row to collapse.\r\n   */\r\n  self.collapseTree = function (rowIndex) {\r\n    self.dispatchEvent('collapsetree', {\r\n      childGrid: self.childGrids[rowIndex],\r\n      data: self.viewData[rowIndex],\r\n      rowIndex: rowIndex,\r\n    });\r\n    self.openChildren[rowIndex].blur();\r\n    self.openChildren[rowIndex].dispose();\r\n    delete self.openChildren[rowIndex];\r\n    delete self.sizes.trees[rowIndex];\r\n    delete self.childGrids[rowIndex];\r\n    self.dispatchEvent('resizerow', {\r\n      cellHeight: self.style.cellHeight,\r\n    });\r\n    self.resize(true);\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Expands a tree grid by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name expandTree\r\n   * @method\r\n   * @param {number} index The index of the row to expand.\r\n   */\r\n  self.expandTree = function (rowIndex) {\r\n    var trArgs = self.args.treeGridAttributes || {},\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth =\r\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\r\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\r\n      treeGrid;\r\n    if (!self.childGrids[rowIndex]) {\r\n      trArgs.debug = self.attributes.debug;\r\n      trArgs.name = self.attributes.saveAppearance\r\n        ? self.attributes.name + 'tree' + rowIndex\r\n        : undefined;\r\n      trArgs.style = trArgs.style || self.style;\r\n      trArgs.parentNode = {\r\n        parentGrid: self.intf,\r\n        nodeType: 'canvas-datagrid-tree',\r\n        offsetHeight: h,\r\n        offsetWidth: self.width - rowHeaderCellWidth,\r\n        header: { width: self.width - rowHeaderCellWidth },\r\n        offsetLeft: rowHeaderCellWidth,\r\n        offsetTop: columnHeaderCellHeight,\r\n        offsetParent: self.intf.parentNode,\r\n        parentNode: self.intf.parentNode,\r\n        style: 'tree',\r\n        data: self.viewData[rowIndex],\r\n      };\r\n      treeGrid = self.createGrid(trArgs);\r\n      self.childGrids[rowIndex] = treeGrid;\r\n    }\r\n    treeGrid = self.childGrids[rowIndex];\r\n    treeGrid.visible = true;\r\n    self.dispatchEvent('expandtree', {\r\n      treeGrid: treeGrid,\r\n      data: self.viewData[rowIndex],\r\n      rowIndex: rowIndex,\r\n    });\r\n    self.openChildren[rowIndex] = treeGrid;\r\n    self.sizes.trees[rowIndex] = h;\r\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Toggles tree grid open and close by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name toggleTree\r\n   * @method\r\n   * @param {number} index The index of the row to toggle.\r\n   */\r\n  self.toggleTree = function (rowIndex) {\r\n    var i = self.openChildren[rowIndex];\r\n    if (i) {\r\n      return self.collapseTree(rowIndex);\r\n    }\r\n    self.expandTree(rowIndex);\r\n  };\r\n  /**\r\n   * Returns a header from the schema by name.\r\n   * @memberof canvasDatagrid\r\n   * @name getHeaderByName\r\n   * @tutorial schema\r\n   * @method\r\n   * @returns {header} header with the selected name, or undefined.\r\n   * @param {string} name The name of the column to resize.\r\n   */\r\n  self.getHeaderByName = function (name) {\r\n    var x,\r\n      i = self.getSchema();\r\n    for (x = 0; x < i.length; x += 1) {\r\n      if (i[x].name === name) {\r\n        return i[x];\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\r\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\r\n   * @memberof canvasDatagrid\r\n   * @name fitColumnToValues\r\n   * @method\r\n   * @param {string} name The name of the column to resize.\r\n   */\r\n  self.fitColumnToValues = function (name, internal) {\r\n    if (!self.canvas) {\r\n      return;\r\n    }\r\n    self.sizes.columns[\r\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\r\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\r\n    if (!internal) {\r\n      self.resize();\r\n      self.draw(true);\r\n    }\r\n  };\r\n  /**\r\n   * Checks if a cell is currently visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isCellVisible\r\n   * @overload\r\n   * @method\r\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\r\n   * @param {number} columnIndex The column index of the cell to check.\r\n   * @param {number} rowIndex The row index of the cell to check.\r\n   */\r\n  self.isCellVisible = function (cell, rowIndex) {\r\n    // overload\r\n    if (rowIndex !== undefined) {\r\n      return (\r\n        self.visibleCells.filter(function (c) {\r\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\r\n        }).length > 0\r\n      );\r\n    }\r\n    var x,\r\n      l = self.visibleCells.length;\r\n    for (x = 0; x < l; x += 1) {\r\n      if (\r\n        cell.x === self.visibleCells[x].x &&\r\n        cell.y === self.visibleCells[x].y\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  /**\r\n   * Sets the order of the data.\r\n   * @memberof canvasDatagrid\r\n   * @name order\r\n   * @method\r\n   * @param {number} columnName Name of the column to be sorted.\r\n   * @param {string} direction `asc` for ascending or `desc` for descending.\r\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\r\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\r\n   */\r\n  self.order = function (\r\n    columnName,\r\n    direction,\r\n    sortFunction,\r\n    dontSetStorageData,\r\n  ) {\r\n    var f,\r\n      c = self.getSchema().filter(function (col) {\r\n        return col.name === columnName;\r\n      });\r\n    if (\r\n      self.dispatchEvent('beforesortcolumn', {\r\n        name: columnName,\r\n        direction: direction,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.orderBy = columnName;\r\n    self.orderDirection = direction;\r\n    if (!self.viewData || self.viewData.length === 0) {\r\n      return;\r\n    }\r\n    if (c.length === 0) {\r\n      throw new Error('Cannot sort.  No such column name');\r\n    }\r\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\r\n    if (!f && c[0].type !== undefined) {\r\n      console.warn(\r\n        'Cannot sort type \"%s\" falling back to string sort.',\r\n        c[0].type,\r\n      );\r\n    }\r\n    self.orderings.add(\r\n      columnName,\r\n      direction,\r\n      typeof f === 'function' ? f : self.sorters.string,\r\n    );\r\n    self.refresh();\r\n    self.dispatchEvent('sortcolumn', {\r\n      name: columnName,\r\n      direction: direction,\r\n    });\r\n\r\n    if (dontSetStorageData) {\r\n      return;\r\n    }\r\n    self.setStorageData();\r\n  };\r\n  self.isInGrid = function (e) {\r\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\r\n   * @memberof canvasDatagrid\r\n   * @name moveSelection\r\n   * @method\r\n   * @param {number} offsetX The number of columns to offset the selection.\r\n   * @param {number} offsetY The number of rows to offset the selection.\r\n   */\r\n  self.moveSelection = function (offsetX, offsetY) {\r\n    var sel = [];\r\n    self.selections.forEach(function (row, rowIndex) {\r\n      sel[rowIndex + offsetY] = [];\r\n      row.forEach(function (colIndex) {\r\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\r\n      });\r\n    });\r\n    self.selections = sel;\r\n  };\r\n  /**\r\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\r\n   * @memberof canvasDatagrid\r\n   * @name moveTo\r\n   * @method\r\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\r\n   * @param {number} x The column index to start inserting the selection at.\r\n   * @param {number} y The row index to start inserting the selection at.\r\n   */\r\n  self.moveTo = function (sel, x, y) {\r\n    var selectedData = self.getSelectedData(),\r\n      visibleSchema = self.getVisibleSchema(),\r\n      selectionLength = sel.length,\r\n      xi,\r\n      maxRowLength = -Infinity,\r\n      minXi = Infinity,\r\n      yi = y - 1;\r\n\r\n    sel.forEach(function (row, rowIndex) {\r\n      if (rowIndex === selectionLength) {\r\n        return;\r\n      }\r\n      if (row.length === 0) {\r\n        return;\r\n      }\r\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\r\n      maxRowLength = Math.max(maxRowLength, row.length);\r\n      row.forEach(function (colIndex) {\r\n        // intentional redef of colIndex\r\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\r\n        if (!visibleSchema[colIndex]) {\r\n          return;\r\n        }\r\n        // TODO:\r\n        if (!self.data[rowIndex]) {\r\n          self.data[rowIndex] = {};\r\n        }\r\n        // TODO:\r\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\r\n      });\r\n    });\r\n\r\n    sel.forEach(function (row, index) {\r\n      var lastSourceIndex;\r\n      yi += 1;\r\n      xi = self.getVisibleColumnIndexOf(x);\r\n      row.forEach(function (colIndex, cidx) {\r\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\r\n        if (cidx > 0) {\r\n          // this confusing bit of nonsense figures out\r\n          // if the selection has skipped cells\r\n          xi += colIndex - lastSourceIndex;\r\n        }\r\n        lastSourceIndex = colIndex;\r\n        if (\r\n          colIndex === -1 ||\r\n          !visibleSchema[xi] ||\r\n          !visibleSchema[colIndex] ||\r\n          // TODO:\r\n          self.data.length - 1 < yi ||\r\n          yi < 0\r\n        ) {\r\n          return;\r\n        }\r\n        // TODO:\r\n        if (!self.data[yi]) {\r\n          self.data[yi] = {};\r\n        }\r\n        // TODO:\r\n        self.data[yi][visibleSchema[xi].name] =\r\n          selectedData[index][visibleSchema[colIndex].name];\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * Checks if a given column is visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isColumnVisible\r\n   * @method\r\n   * @returns {boolean} When true, the column is visible.\r\n   * @param {number} columnIndex Column index.\r\n   */\r\n  self.isColumnVisible = function (columnIndex) {\r\n    return (\r\n      self.visibleCells.filter(function (c) {\r\n        return c.columnIndex === columnIndex;\r\n      }).length > 0\r\n    );\r\n  };\r\n  /**\r\n   * Checks if a given row is visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isRowVisible\r\n   * @method\r\n   * @returns {boolean} When true, the row is visible.\r\n   * @param {number} rowIndex Row index.\r\n   */\r\n  self.isRowVisible = function (rowIndex) {\r\n    return (\r\n      self.visibleCells.filter(function (c) {\r\n        return c.rowIndex === rowIndex;\r\n      }).length > 0\r\n    );\r\n  };\r\n  /**\r\n   * Gets the cell at columnIndex and rowIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name getVisibleCellByIndex\r\n   * @method\r\n   * @returns {cell} cell at the selected location.\r\n   * @param {number} x Column index.\r\n   * @param {number} y Row index.\r\n   */\r\n  self.getVisibleCellByIndex = function (x, y) {\r\n    return self.visibleCells.filter(function (c) {\r\n      return c.columnIndex === x && c.rowIndex === y;\r\n    })[0];\r\n  };\r\n  /**\r\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\r\n   * @memberof canvasDatagrid\r\n   * @name getCellAt\r\n   * @method\r\n   * @returns {cell} cell at the selected location.\r\n   * @param {number} x Number of pixels from the left.\r\n   * @param {number} y Number of pixels from the top.\r\n   */\r\n  self.getCellAt = function (x, y, useTouchScrollZones) {\r\n    function getBorder(entitiy) {\r\n      if (\r\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\r\n          x &&\r\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\r\n      ) {\r\n        return 'r';\r\n      }\r\n      if (\r\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\r\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\r\n      ) {\r\n        return 'l';\r\n      }\r\n      if (\r\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\r\n          y &&\r\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\r\n      ) {\r\n        return 'b';\r\n      }\r\n      if (\r\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\r\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\r\n      ) {\r\n        return 't';\r\n      }\r\n    }\r\n    if (!self.visibleCells) {\r\n      return;\r\n    }\r\n    var border,\r\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\r\n      moveMode = self.attributes.borderDragBehavior === 'move',\r\n      i,\r\n      l = self.visibleCells.length,\r\n      moveBorder,\r\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\r\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\r\n      cell,\r\n      entitiy;\r\n    if (!self.visibleCells || !self.visibleCells.length) {\r\n      return;\r\n    }\r\n    self.hasFocus = true;\r\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\r\n      self.hasFocus = false;\r\n      return {\r\n        dragContext: 'inherit',\r\n        context: 'inherit',\r\n      };\r\n    }\r\n    for (i = 0; i < l; i += 1) {\r\n      cell = self.visibleCells[i];\r\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\r\n      entitiy = {\r\n        x: cell.x,\r\n        y: cell.y,\r\n        height: cell.height,\r\n        width: cell.width,\r\n      };\r\n      if (\r\n        useTouchScrollZones &&\r\n        /(vertical|horizontal)-scroll-/.test(cell.style)\r\n      ) {\r\n        entitiy.x -= tsz;\r\n        entitiy.y -= tsz;\r\n        entitiy.height += tsz;\r\n        entitiy.width += tsz;\r\n      }\r\n      if (\r\n        entitiy.x - self.style.cellBorderWidth < x &&\r\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\r\n        entitiy.y - self.style.cellBorderWidth < y &&\r\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\r\n      ) {\r\n        if (/frozen-row-marker/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'row-resize';\r\n          return cell;\r\n        }\r\n        if (/frozen-column-marker/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'col-resize';\r\n          return cell;\r\n        }\r\n        if (/selection-handle-/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'crosshair';\r\n          return cell;\r\n        }\r\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\r\n          cell.dragContext = 'vertical-scroll-box';\r\n          cell.context = 'vertical-scroll-box';\r\n          cell.isScrollBar = true;\r\n          cell.isVerticalScrollBar = true;\r\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\r\n            cell.dragContext = 'vertical-scroll-bottom';\r\n            cell.context = 'vertical-scroll-bottom';\r\n          } else if (y < self.scrollBox.box.v.y) {\r\n            cell.dragContext = 'vertical-scroll-top';\r\n            cell.context = 'vertical-scroll-top';\r\n          }\r\n          self.cursor = 'default';\r\n          return cell;\r\n        }\r\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\r\n          cell.dragContext = 'horizontal-scroll-box';\r\n          cell.context = 'horizontal-scroll-box';\r\n          cell.isScrollBar = true;\r\n          cell.isHorizontalScrollBar = true;\r\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\r\n            cell.dragContext = 'horizontal-scroll-right';\r\n            cell.context = 'horizontal-scroll-right';\r\n          } else if (x < self.scrollBox.box.h.x) {\r\n            cell.dragContext = 'horizontal-scroll-left';\r\n            cell.context = 'horizontal-scroll-left';\r\n          }\r\n          self.cursor = 'default';\r\n          return cell;\r\n        }\r\n        border = getBorder(entitiy);\r\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\r\n        moveBorder =\r\n          moveMode &&\r\n          cell.selectionBorder &&\r\n          cell.selectionBorder.indexOf(border) !== -1;\r\n        if (\r\n          ['l', 'r'].indexOf(border) !== -1 &&\r\n          (self.attributes.allowColumnResize || moveBorder) &&\r\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\r\n            !cell.isNormal ||\r\n            moveBorder) &&\r\n          ((self.attributes.allowRowHeaderResize &&\r\n            (cell.isRowHeader || cell.isCorner)) ||\r\n            !(cell.isRowHeader && cell.isCorner))\r\n        ) {\r\n          if (\r\n            (cell.isColumnHeader ||\r\n              cell.isCorner ||\r\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\r\n            border === 'r'\r\n          ) {\r\n            cell.context = 'ew-resize';\r\n            cell.dragContext = 'ew-resize';\r\n            return cell;\r\n          }\r\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\r\n            cell.context = xBorderBehavior;\r\n            cell.dragContext = border + '-move';\r\n            return cell;\r\n          }\r\n        }\r\n        if (\r\n          ['t', 'b'].indexOf(border) !== -1 &&\r\n          cell.rowIndex > -1 &&\r\n          (self.attributes.allowRowResize || moveBorder) &&\r\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\r\n            !cell.isNormal ||\r\n            moveBorder) &&\r\n          !cell.isColumnHeader\r\n        ) {\r\n          if (\r\n            (cell.isRowHeader ||\r\n              cell.isCorner ||\r\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\r\n            border === 'b'\r\n          ) {\r\n            cell.context = 'ns-resize';\r\n            cell.dragContext = 'ns-resize';\r\n            return cell;\r\n          }\r\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\r\n            cell.context = yBorderBehavior;\r\n            cell.dragContext = border + '-move';\r\n            return cell;\r\n          }\r\n        }\r\n        if (cell.style === 'columnHeaderCell') {\r\n          cell.context = 'cell';\r\n          cell.dragContext = 'column-reorder';\r\n          return cell;\r\n        }\r\n        if (cell.style === 'rowHeaderCell') {\r\n          if (\r\n            self.attributes.rowGrabZoneSize +\r\n              (cell.y - self.style.cellBorderWidth) <\r\n              y ||\r\n            !self.attributes.allowRowReordering\r\n          ) {\r\n            cell.dragContext = 'cell';\r\n            cell.context = 'cell';\r\n          } else {\r\n            cell.context = self.cursorGrab;\r\n            cell.dragContext = 'row-reorder';\r\n          }\r\n          return cell;\r\n        }\r\n        if (cell.isGrid) {\r\n          self.hasFocus = false;\r\n          cell.dragContext = 'cell-grid';\r\n          cell.context = 'cell-grid';\r\n          return cell;\r\n        }\r\n        if (cell.style === 'tree-grid') {\r\n          self.hasFocus = false;\r\n          cell.dragContext = 'tree';\r\n          cell.context = 'tree';\r\n          return cell;\r\n        }\r\n        cell.dragContext = 'cell';\r\n        cell.context = 'cell';\r\n        return cell;\r\n      }\r\n    }\r\n    self.hasFocus = true;\r\n    self.cursor = 'default';\r\n    return {\r\n      dragContext: 'background',\r\n      context: 'background',\r\n      style: 'background',\r\n      isBackground: true,\r\n    };\r\n  };\r\n  /**\r\n   * Gets the bounds of current selection.\r\n   * @returns {rect} selection.\r\n   * @memberof canvasDatagrid\r\n   * @name getSelectionBounds\r\n   * @method\r\n   */\r\n  self.getSelectionBounds = function () {\r\n    var low = { x: Infinity, y: Infinity },\r\n      high = { x: -Infinity, y: -Infinity };\r\n    self.selections.forEach(function (row, rowIndex) {\r\n      var maxCol, minCol;\r\n      low.y = rowIndex < low.y ? rowIndex : low.y;\r\n      high.y = rowIndex > high.y ? rowIndex : high.y;\r\n      maxCol = Math.max.apply(null, row);\r\n      minCol = Math.min.apply(null, row);\r\n      low.x = minCol < low.x ? minCol : low.x;\r\n      high.x = maxCol > high.x ? maxCol : high.x;\r\n    });\r\n    return {\r\n      top: low.y,\r\n      left: low.x,\r\n      bottom: high.y,\r\n      right: high.x,\r\n    };\r\n  };\r\n  /**\r\n   * Returns an auto generated schema based on data structure.\r\n   * @memberof canvasDatagrid\r\n   * @name getSchemaFromData\r\n   * @method\r\n   * @tutorial schema\r\n   * @returns {schema} schema A schema based on the first item in the data array.\r\n   */\r\n  self.getSchemaFromData = function (d) {\r\n    d = d || self.originalData;\r\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\r\n      key,\r\n      index,\r\n    ) {\r\n      var type = self.getBestGuessDataType(key, d),\r\n        i = {\r\n          name: key,\r\n          title: isNaN(parseInt(key, 10))\r\n            ? key\r\n            : self.integerToAlpha(key).toUpperCase(),\r\n          index: index,\r\n          columnIndex: index,\r\n          type: type,\r\n          filter: self.filter(type),\r\n        };\r\n      if (\r\n        self.storedSettings &&\r\n        self.storedSettings.visibility &&\r\n        self.storedSettings.visibility[i.name] !== undefined\r\n      ) {\r\n        i.hidden = !self.storedSettings.visibility[i.name];\r\n      }\r\n      return i;\r\n    });\r\n  };\r\n  /**\r\n   * Clears the change log grid.changes that keeps track of changes to the data set.\r\n   * This does not undo changes or alter data it is simply a convince array to keep\r\n   * track of changes made to the data since last this method was called.\r\n   * @memberof canvasDatagrid\r\n   * @name clearChangeLog\r\n   * @method\r\n   */\r\n  self.clearChangeLog = function () {\r\n    self.changes = [];\r\n  };\r\n  /**\r\n   * Selects an area of the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name selectArea\r\n   * @method\r\n   * @param {rect} bounds A rect object representing the selected values.\r\n   */\r\n  self.selectArea = function (bounds, ctrl) {\r\n    self.selectionBounds = bounds || self.selectionBounds;\r\n    var ev,\r\n      x,\r\n      y,\r\n      s = self.getSchema();\r\n    if (!ctrl) {\r\n      self.selections = [];\r\n    }\r\n    if (\r\n      self.selectionBounds.top < -1 ||\r\n      self.selectionBounds.bottom > self.viewData.length ||\r\n      self.selectionBounds.left < -1 ||\r\n      self.selectionBounds.right > s.length\r\n    ) {\r\n      throw new Error('Impossible selection area');\r\n    }\r\n    for (\r\n      x = self.selectionBounds.top;\r\n      x <= self.selectionBounds.bottom;\r\n      x += 1\r\n    ) {\r\n      self.selections[x] = [];\r\n      for (\r\n        y = self.selectionBounds.left;\r\n        y <= self.selectionBounds.right;\r\n        y += 1\r\n      ) {\r\n        if (self.selections[x].indexOf(y) === -1) {\r\n          self.selections[x].push(y);\r\n        }\r\n      }\r\n    }\r\n    ev = {\r\n      selections: self.selections,\r\n      selectionBounds: self.selectionBounds,\r\n    };\r\n    Object.defineProperty(ev, 'selectedData', {\r\n      get: function () {\r\n        return self.getSelectedData();\r\n      },\r\n    });\r\n    self.dispatchEvent('selectionchanged', ev);\r\n  };\r\n  /**\r\n   * Returns the maximum text width for a given column by column name.\r\n   * @memberof canvasDatagrid\r\n   * @name findColumnMaxTextLength\r\n   * @method\r\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\r\n   * @param {string} name The name of the column to calculate the value's width of.\r\n   */\r\n  self.findColumnMaxTextLength = function (name) {\r\n    var m = -Infinity;\r\n    if (name === 'cornerCell') {\r\n      self.ctx.font = self.style.rowHeaderCellFont;\r\n      return (\r\n        self.ctx.measureText(\r\n          (\r\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\r\n          ).toString(),\r\n        ).width +\r\n        self.style.autosizePadding +\r\n        self.style.autosizeHeaderCellPadding +\r\n        self.style.rowHeaderCellPaddingRight +\r\n        self.style.rowHeaderCellPaddingLeft +\r\n        (self.attributes.tree\r\n          ? self.style.treeArrowWidth +\r\n            self.style.treeArrowMarginLeft +\r\n            self.style.treeArrowMarginRight\r\n          : 0)\r\n      );\r\n    }\r\n    var formatter = null;\r\n    self.getSchema().forEach(function (col) {\r\n      if (col.name !== name) {\r\n        return;\r\n      }\r\n      self.ctx.font = self.style.columnHeaderCellFont;\r\n      var t =\r\n        self.ctx.measureText(col.title || col.name).width +\r\n        self.style.headerCellPaddingRight +\r\n        self.style.headerCellPaddingLeft;\r\n      m = t > m ? t : m;\r\n      formatter = self.formatters[col.type];\r\n    });\r\n    self.viewData.forEach(function (row) {\r\n      var text = row[name];\r\n      if (formatter) {\r\n        text = formatter({ cell: { value: text } });\r\n      }\r\n      self.ctx.font = self.style.cellFont;\r\n      var t =\r\n        self.ctx.measureText(text).width +\r\n        self.style.cellPaddingRight +\r\n        self.style.cellPaddingLeft +\r\n        self.style.cellAutoResizePadding;\r\n      m = t > m ? t : m;\r\n    });\r\n    return m;\r\n  };\r\n  /**\r\n   * Gets the total width of all header columns.\r\n   * @memberof canvasDatagrid\r\n   * @name getHeaderWidth\r\n   * @method\r\n   */\r\n  self.getHeaderWidth = function () {\r\n    return self.getVisibleSchema().reduce(function (total, header) {\r\n      return total + parseInt(header.width || self.style.cellWidth, 10);\r\n    }, 0);\r\n  };\r\n  /**\r\n   * Gets the height of a row by index.\r\n   * @memberof canvasDatagrid\r\n   * @name getRowHeight\r\n   * @method\r\n   * @param {number} rowIndex The row index to lookup.\r\n   */\r\n  self.getRowHeight = function (rowIndex) {\r\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\r\n  };\r\n  /**\r\n   * Gets the width of a column by index.\r\n   * @memberof canvasDatagrid\r\n   * @name getColumnWidth\r\n   * @method\r\n   * @param {number} columnIndex The column index to lookup.\r\n   */\r\n  self.getColumnWidth = function (columnIndex) {\r\n    return (\r\n      (self.sizes.columns[columnIndex] ||\r\n        self.getSchema()[columnIndex].width ||\r\n        self.style.cellWidth) * self.scale\r\n    );\r\n  };\r\n  self.formatters.string = function cellFormatterString(e) {\r\n    return e.cell.value !== undefined ? e.cell.value : '';\r\n  };\r\n  self.formatters.rowHeaderCell = self.formatters.string;\r\n  self.formatters.headerCell = self.formatters.string;\r\n  self.formatters.number = self.formatters.string;\r\n  self.formatters.int = self.formatters.string;\r\n  self.formatters.html = self.formatters.string;\r\n  self.sorters.string = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      if (a[columnName] === undefined || a[columnName] === null) {\r\n        return 1;\r\n      }\r\n      if (b[columnName] === undefined || b[columnName] === null) {\r\n        return 0;\r\n      }\r\n      if (asc) {\r\n        if (!a[columnName].localeCompare) {\r\n          return 1;\r\n        }\r\n        return a[columnName].localeCompare(b[columnName]);\r\n      }\r\n      if (!b[columnName].localeCompare) {\r\n        return 1;\r\n      }\r\n      return b[columnName].localeCompare(a[columnName]);\r\n    };\r\n  };\r\n  self.sorters.number = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      if (asc) {\r\n        return a[columnName] - b[columnName];\r\n      }\r\n      return b[columnName] - a[columnName];\r\n    };\r\n  };\r\n  self.sorters.date = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      if (asc) {\r\n        return (\r\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\r\n        );\r\n      }\r\n      return (\r\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\r\n      );\r\n    };\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true, evil: true*/\r\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport component from './component';\r\nimport defaults from './defaults';\r\nimport draw from './draw';\r\nimport events from './events';\r\nimport touch from './touch';\r\nimport intf from './intf';\r\nimport contextMenu from './contextMenu';\r\nimport dom from './dom';\r\nimport publicMethods from './publicMethods';\r\n\r\nvar webComponent = component();\r\n\r\nvar modules = [\r\n  defaults,\r\n  draw,\r\n  events,\r\n  touch,\r\n  intf,\r\n  contextMenu,\r\n  dom,\r\n  publicMethods,\r\n];\r\n\r\nfunction Grid(args) {\r\n  args = args || {};\r\n  var self = {};\r\n  self.isComponent = args.component === undefined;\r\n  self.isChildGrid =\r\n    args.parentNode &&\r\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\r\n  if (self.isChildGrid) {\r\n    self.intf = {};\r\n  } else {\r\n    self.intf = self.isComponent\r\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\r\n      : document.createElement('canvas');\r\n  }\r\n  self.args = args;\r\n  self.intf.args = args;\r\n  self.applyComponentStyle = webComponent.applyComponentStyle;\r\n  self.hyphenateProperty = webComponent.hyphenateProperty;\r\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\r\n  self.createGrid = function grid(args) {\r\n    args.component = false;\r\n    return new Grid(args);\r\n  };\r\n\r\n  modules.forEach(function (module) {\r\n    module(self);\r\n  });\r\n\r\n  if (self.isChildGrid) {\r\n    self.shadowRoot = args.parentNode.shadowRoot;\r\n    self.parentNode = args.parentNode;\r\n  } else {\r\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\r\n    self.parentNode = self.shadowRoot;\r\n  }\r\n  self.init();\r\n  return self.intf;\r\n}\r\nif (window.HTMLElement) {\r\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\r\n}\r\n// export web component\r\nif (window.customElements) {\r\n  Grid.observedAttributes = webComponent.getObservableAttributes();\r\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\r\n  Grid.prototype.attributeChangedCallback =\r\n    webComponent.attributeChangedCallback;\r\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\r\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\r\n  window.customElements.define('canvas-datagrid', Grid);\r\n}\r\n\r\n// export global\r\nif (\r\n  window &&\r\n  !window.canvasDatagrid &&\r\n  !window.require &&\r\n  // Present to exclude global declarations from ES Module bundles\r\n  !window.EXCLUDE_GLOBAL\r\n) {\r\n  window.canvasDatagrid = function (args) {\r\n    return new Grid(args);\r\n  };\r\n}\r\n\r\n// export amd loader\r\nexport default function canvasDatagrid(args) {\r\n  args = args || {};\r\n  var i,\r\n    tKeys = [\r\n      'style',\r\n      'formatters',\r\n      'sorters',\r\n      'filters',\r\n      'treeGridAttributes',\r\n      'cellGridAttributes',\r\n      'data',\r\n      'schema',\r\n    ];\r\n  if (window.customElements) {\r\n    i = document.createElement('canvas-datagrid');\r\n    Object.keys(args).forEach(function (argKey) {\r\n      // set data and parentNode after everything else\r\n      if (argKey === 'data') {\r\n        return;\r\n      }\r\n      if (argKey === 'parentNode') {\r\n        return;\r\n      }\r\n      // top level keys in args\r\n      if (tKeys.indexOf(argKey) !== -1) {\r\n        tKeys.forEach(function (tKey) {\r\n          if (args[tKey] === undefined || tKey !== argKey) {\r\n            return;\r\n          }\r\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\r\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\r\n              Object.keys(args[tKey]).forEach(function (sKey) {\r\n                i[tKey][sKey] = args[tKey][sKey];\r\n              });\r\n            }\r\n          } else {\r\n            i[tKey] = args[tKey];\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      // all others are attribute level keys\r\n      i.attributes[argKey] = args[argKey];\r\n    });\r\n    if (args.data) {\r\n      i.data = args.data;\r\n    }\r\n    // add to the dom very last to avoid redraws\r\n    if (args.parentNode) {\r\n      args.parentNode.appendChild(i);\r\n    }\r\n    return i;\r\n  }\r\n  args.component = false;\r\n  i = new Grid(args);\r\n  if (args.parentNode && args.parentNode.appendChild) {\r\n    args.parentNode.appendChild(i);\r\n  }\r\n  return i;\r\n}\r\n"],"names":["self","defaults","attributes","styles","typeMap","component","dehyphenateProperty","prop","replace","nextLetterCap","p","Array","prototype","forEach","call","char","toUpperCase","hyphenateProperty","cust","toLowerCase","applyComponentStyle","supressChangeAndDrawEvents","intf","isComponent","cStyle","window","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","data","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","test","string","str","getObservableAttributes","i","attrs","attr","push","disconnectedCallback","connected","connectedCallback","this","parentDOMNode","innerHTML","appendChild","observe","adoptedCallback","attributeChangedCallback","attrName","oldVal","newVal","tfn","dataType","base","item","filter","addEventListener","Function","name","observer","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","parentNode","addedNodes","length","type","characterData","childList","subtree","document","querySelectorAll","el","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","undefined","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","Object","keys","html","draw","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","mode","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","isChildGrid","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","my","mx","xHover","yHover","drawCorner","en","m","d","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","originalData","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getColumnWidth","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touch","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","indexOf","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","hoverMode","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","nodeType","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","createGrid","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","curSplitChar","measure","arr","map","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","showRowNumberGaps","previousRowNumber","barHeight","rowHeaderCellRowNumberGapHeight","barColor","rowHeaderCellRowNumberGapColor","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","module","exports","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","hasOwnProperty","concat","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","wheeling","stopPropagation","fn","events","removeEventListener","sfn","clearEventListener","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","args","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","contextMenu","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","event","selectedData","getSelectedData","selectionBounds","selectRow","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","sb","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","obj","isPrintableKeyEvent","beginEditAt","selectNone","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","isSupportedHtmlTable","htmlString","isSupportedHtmlTableExt","substring","match","replaceAll","slice","parseData","editedCells","cellData","forEachSelectedCell","colName","_typeof","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","affectedCells","itself","refresh","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addCellValue","addHeaders","setData","htmlSafe","headers","useHtml","hVal","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","ctor","treeGridAttributes","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","orderings","add","sortFunction","col","sort","filters","sorters","parsers","schemaHashes","changes","componentL1Events","eventNames","expandToRow","viewDataLength","orderedIndex","boundRowIndexMap","has","visibility","localStorage","setItem","tempSchema","createColumnOrders","applyDefaultValue","defaultValue","createNewRowData","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","getHeaderByName","currentFilterFunction","cellValue","entries","sortFn","rowA","rowB","getBestGuessDataType","drawChildGrids","gridKey","setTimer","validateColumn","setDefaults","obj1","obj2","setAttributes","setStyle","findColumnMaxTextLength","dispose","removeChild","eventParent","contextmenu","disconnect","tryLoadStoredSettings","reloadStoredValues","storedSettings","getDomRoot","shadowRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","init","initialized","publicStyleKeyIntf","initScrollBox","setDom","ie","navigator","userAgent","edge","webKit","moz","blankValues","cursorGrab","cursorGrabing","cursorGrabbing","appendTo","getVisibleCellByIndex","clearChangeLog","gotoCell","gotoRow","findColumnScrollLeft","findRowScrollTop","isCellVisible","isRowVisible","isColumnVisible","clipElement","getSchemaFromData","setFilter","expandTree","collapseTree","insertRow","deleteRow","addRow","insertColumn","deleteColumn","addColumn","getClippingRect","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","assertPxColor","clearPxColorAssertions","integerToAlpha","addStyleKeyIfNoneExists","DOMStyles","set","valueObject","filterFor","blanksText","String","trim","filterRegExp","pattern","exec","flags","flagLength","invalidFilterRegEx","RegExp","toLocaleUpperCase","innerText","textContent","blur","TypeError","currentCursor","find","eventName","RangeError","isArray","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","loc","container","createElement","upArrow","downArrow","children","selectedIndex","checkArrowVisibility","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","position","contextMenuArrowColor","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","count","blanksItem","autoCompleteItems","maxAutoCompleteItems","disposeAutocomplete","onclick","filterOptionText","contextFilterButtonHTML","cf","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","scrollingElement","borderWidth","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","objValue","aborted","ev2","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","onblur","parentIsCanvas","getContext","textBaseline","ordA","charCodeAt","len","fromCharCode","offsetX","offsetY","targetX","targetY","sbh","isColumnSelected","colIsSelected","shift","supressEvent","addCol","st","de","ri","dragObject","childGrid","trArgs","treeGridHeight","dontSetStorageData","sorter","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","webComponent","modules","dom","publicMethods","Grid","eval","attachShadow","canvasDatagrid","tKeys","customElements","argKey","tKey","sKey","HTMLElement","observedAttributes","define","require"],"mappings":"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"}